{"version":3,"sources":["conf/conf.js","redux/userSlice/userSlice.js","modules/hooks/useClick.js","components/mobile/Header.js","modules/hooks/useAxios.js","routes/Mobile/Korean/ApplicationForm/ApplicationForm.js","modules/parseDate.js","redux/confSlice/confSlice.js","components/mobile/Calendar.js","components/mobile/Item.js","components/mobile/List.js","routes/Mobile/Korean/Reservation/Reservation.js","routes/Mobile/Korean/Results/Results.js","components/mobile/TabView.js","routes/Mobile/Korean/Schedules/Schedules.js","components/mobile/Login.js","components/mobile/Footer.js","app/Routers/Router.Mobile.js","components/common/modal/Modal.js","components/common/modal/InsertSchedule.js","components/common/modal/ShowList.js","components/common/modal/ConfirmResult.js","conf/scheduleConf.js","components/common/ScheduleTable.js","components/common/CheckBox.js","conf/class/DailySchedule.js","modules/hooks/useModal.js","routes/Web/Manager/Schedules/Schedules.js","routes/Web/Manager/Settings/Settings.js","components/common/modal/ConfirmStudent.js","components/common/modal/ConfirmRestriction.js","components/common/modal/ConfirmUnrestriction.js","redux/managerSlice/managerSlice.js","routes/Web/Manager/Students/Students.js","components/common/Header.js","components/common/Footer.js","components/common/modal/ForeignerContact.js","components/common/modal/InsertForeignerStudent.js","routes/Web/Manager/Students/Foreigner.js","components/common/modal/InsertResult.js","routes/Web/Foreign/Schedules/Schedules.js","app/Routers/Router.Web.js","routes/Login/Login.js","modules/validator.js","app/Routers/Router.Login.js","app/Routes.js","app/App.js","redux/store.js","index.js"],"names":["conf","userClass","MANAGER","FOREIGNER","KOREAN","department","COMINFO","MECHANICAL","ICT","ELECTRICAL","ARCHITECTURE","MILITARY","DESIGN","DRONE","BUSINESS","TOURISM","WELFARE","CHILDHOOD","HELTH","NURSING","shortDepartment","language","ENGLISH","JAPANESE","CHINESE","url","userSlice","createSlice","name","initialState","isLogin","user","id","reducers","logIn","state","logOut","setClass","action","payload","actions","selectIsLogin","selectUser","onClick","element","useRef","useEffect","current","addEventListener","style","cursor","removeEventListener","Header","useClicks","useState","useHistory","location","pathname","setPathname","home","useClick","reservation","schedule","result","login","key","hasOwnProperty","className","error","to","src","alt","ref","postAxios","opts","history","axiosInstance","defaultAxios","then","data","console","log","status","alert","message","push","useAxios","loading","setState","getKoreanReservationResult","sect_id","search_month","std_kor_id","setData","params","getForeignerReservation","sch_id","std_for_id","res","ApplicationForm","schId","useParams","resData","useSelector","a","getResData","sch_res_count","sch_ava_count","std_for_lang","std_for_name","sch_time","type","value","sch_date","readOnly","defaultValue","htmlFor","document","getElementById","checked","method","parseDate","date","getFullYear","getMonth","getDate","confSlice","dept","today","Date","now","selectDate","setDept","index","dept_name","split","setSelectDate","setTodayToday","setTodayFuture","selectDept","selectToday","selectSelectDate","Calendar","props","month","moment","selected","startOf","previous","bind","next","this","subtract","add","day","clone","weeks","done","count","monthIndex","select","format","fontSize","marginLeft","renderMonthLabel","marginRight","renderWeeks","React","Component","DayNames","color","Week","dispatch","useDispatch","days","substring","number","isCurrentMonth","isToday","isSame","_d","i","Day","toString","Item","time","zoomPw","zoomId","application","scheduleInfo","class","setStatus","map","e","List","tabView","toDay","item","sch_start_date","substr","sch_end_date","sch_res_available","res_state_of_permission","sch_state_of_result_input","res_state_of_attendance","sch_for_zoom_pw","std_for_zoom_id","Reservation","search_date","getKoreanReservation","Results","sect","setSect","selectSect","setSelectSect","sect_name","res_count","onChange","target","v","window","easydropdown","all","length","href","width","scope","TabView","list","tabs","eng","jp","ch","Schedules","Login","Footer","exact","path","component","Schedule","MobileLogin","modalStyle","content","top","left","right","bottom","transform","zIndex","overflow","Modal","setAppElement","children","isOpen","handleClose","onRequestClose","InsertSchedule","closeSch","ShowList","setStudentList","array","forEach","permission","std_kor_name","permission_std_kor_id_list","not_permission_std_kor_id_list","headers","catch","patchForeignerReservationPermission","ConfirmResult","span","for","ScheduleConf","STATUS","RESERVATION_NOTHING","RESERVATION_IN_PROGRESS","RESERVATION_DONE","RESULT_IN_PROGRESS","RESULT_DONE","setIsOpen","scheduleId","schduleId","ScheduleTable","scheduleList","printSchedule","rowSpan","handleAll","handleCheck","checkBox","DailySchedule","scheduleIds","setSchedule","Math","floor","random","argStatus","undefined","arguments","ceil","useModal","handleOpen","Array","setScheduleList","origin","JSON","parse","stringify","toDateString","toUpperCase","CheckBox","miniArray","j","k","hadleClose","display","Settings","ConfirmStudent","ConfirmRestriction","cols","rows","ConfirmUnrestriction","managerSlice","currentStudent","setCurrentStudent","selectData","manager","Student","std_id","ph","e_mail","absent","deptList","_dept","Data","sort","_sort","Students","isRestrict","hadleOpenForRestrict","handleCloseForRestrict","isUnrestrict","handleOpenForUnrestrict","handleCloseForUnrestrict","dataArray","std_kor_dept","std_kor_state_of_restriction","std_kor_phone","std_kor_mail","std_kor_num_of_attendance","std_kor_num_of_absent","sortBy","b","onMouseOver","onMouseOut","ForeignerContact","InsertForeignerStudent","setId","setName","setLanguage","country","setCountry","phone","setPhone","mail","setMail","setZoomId","departmentList","handleChange","setValue","preventDefault","std_for_dept","std_for_country","std_for_phone","std_for_mail","postAdminForeignerAccount","placeholder","dept_id","Foreigner","mockup","favorite","curruntMonth","lastMonth","thePastMonth","delay","check","dataSet","setDataSet","contactIsOpen","handleOpenForContact","handleCloseForContact","addIsOpen","handleOpenForAdd","handleCloseForAdd","getAdminForeignerWork","flag","handleCheckAll","colSpan","deptId","returnValue","returnDept","InsertResult","setImgStart","setImgEnd","FormData","stdData","setStdData","form","attendance","append","files","entries","attendance_std_kor_id_list","absent_std_kor_id_list","ajax","XMLHttpRequest","onreadystatechange","readyState","setRequestHeader","response","open","send","postForeignerReservationResult","WeekData","arrayOfSchedule","monday","tuesday","wednesday","thursday","friday","oneSchedule","countOfWeek","parseInt","countOfPending","countOfConfirm","countOfDone","countOfReserved","schObj","setIndex","un_permission_count","reservated_count","setDate","minute","makeWeek","weekStartDate","selectedDate","setWeekStartDate","weekEndDate","setWeekEndDate","week","setWeek","scheduleData","setScheduleData","modal","setModal","getWeekStart","currentDay","startDate","buildDiv","td","div","createElement","p","innerText","appendChild","end_date","start_date","getForeignerSchedule","tbody","tr","buildTable","diff","ManagerRouter","ForeignerRouter","ForeignerSchedules","KoreanLogin","pw","argumentsKey","blankValidator","LoginRouter","Test","Routes","User","App","argLoading","setDepartment","configureStore","reducer","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.8784b633.chunk.js","sourcesContent":["const MANAGER = \"MANAGER\";\nconst FOREIGNER = \"FOREIGNER\";\nconst KOREAN = \"KOREAN\";\n\nconst COMINFO = \"컴퓨터정보계열\";\nconst MECHANICAL = \"컴퓨터응용기계계열\";\nconst ICT = \"ICT반도체전자계열\";\nconst ELECTRICAL = \"신재생에너지전기계열\";\nconst ARCHITECTURE = \"건축인테리어디자인계열\";\nconst MILITARY = \"부사관계열\";\nconst DESIGN = \"콘텐츠디자인과\";\nconst DRONE = \"드론항공전자과\";\nconst BUSINESS = \"경영회계서비스계열\";\nconst TOURISM = \"호텔항공관광계열\";\nconst WELFARE = \"사회복지과\";\nconst CHILDHOOD = \"유아교육과\";\nconst HELTH = \"보건의료행정과\";\nconst NURSING = \"간호학과\";\n\nconst ENGLISH = \"영어\";\nconst JAPANESE = \"일본어\";\nconst CHINESE = \"중국어\";\n\nconst conf = {\n  userClass: {\n    MANAGER,\n    FOREIGNER,\n    KOREAN,\n  },\n  department: {\n    COMINFO,\n    MECHANICAL,\n    ICT,\n    ELECTRICAL,\n    ARCHITECTURE,\n    MILITARY,\n    DESIGN,\n    DRONE,\n    BUSINESS,\n    TOURISM,\n    WELFARE,\n    CHILDHOOD,\n    HELTH,\n    NURSING,\n  },\n  shortDepartment: [\n    \"\",\n    \"컴정\",\n    \"기계\",\n    \"전자\",\n    \"전기\",\n    \"디자인\",\n    \"드론\",\n    \"경영\",\n    \"건축\",\n    \"부사관\",\n    \"관광\",\n    \"복지\",\n    \"유아\",\n    \"보건\",\n    \"간호\",\n  ],\n  language: {\n    ENGLISH,\n    JAPANESE,\n    CHINESE,\n  },\n  // url: \"http://13.124.189.186:8888/\"\n  url: \"localhost:8888\",\n};\n\nexport default conf;\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport User from \"conf/class/User\";\nimport conf from \"conf/conf\";\n\nconst nakamura = 1231234\nconst korean = 1321704\n\n/**\n * ReduxSlice - user\n * @type {Slice<{isLogin: boolean, user}, {setClass: reducers.setClass, logIn: reducers.logIn, logOut: reducers.logOut}, string>}\n */\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        isLogin: true,\n        user: {id: korean, userClass: conf.userClass.FOREIGNER, name: '사람이름'},\n    },\n    reducers: {\n        logIn: (state) => {\n            state.isLogin = true;\n        },\n        logOut: (state) => {\n            state.isLogin = false;\n        },\n        setClass: (state, action) => {\n            state.user = {id: action.payload[0], userClass: action.payload[1]};\n            // state.user.userClass = action.payload;\n        },\n    },\n});\n\n//1231234 나카무라상\n//1321704 한국인 테스트 계정\n\nexport const {logIn, logOut, setClass} = userSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = amount => dispatch => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsLogin = (state) => state.user.isLogin;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from \"react\";\n\n/**\n * Hooks - useClick for onClick event\n * @param {callback} onClick - callback function\n * @returns {React.MutableRefObject<undefined>}\n */\nexport default (onClick) => {\n\tif (typeof onClick !== \"function\") {\n\t\treturn;\n\t}\n\tconst element = useRef();\n\tuseEffect(() => {\n\t\tif (element.current) {\n\t\t\telement.current.addEventListener(\"click\", onClick);\n\t\t\telement.current.style.cursor = \"pointer\";\n\t\t}\n\t\treturn () => {\n\t\t\tif (element.current) {\n\t\t\t\telement.current.removeEventListener(\"click\", onClick);\n\t\t\t}\n\t\t};\n\t}, []);\n\treturn element;\n};\n","import React, {useState, useEffect} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport useClick from \"../../modules/hooks/useClick\";\n\n/**\n * Header for Mobile\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Header() {\n    const [pathname, setPathname] = useState(useHistory().location.pathname);\n    let useClicks;\n    const {home, reservation, schedule, result, login} = (useClicks = {\n        home: useClick(() => setPathname(\"/reservation\")),\n        reservation: useClick(() => setPathname(\"/reservation\")),\n        schedule: useClick(() => setPathname(\"/schedule\")),\n        result: useClick(() => setPathname(\"/result\")),\n        login: useClick(() => setPathname(\"/login\")),\n    });\n\n    useEffect(() => {\n        for (const key in useClicks) {\n            if (useClicks.hasOwnProperty(key)) {\n                const element = useClicks[key];\n                try {\n                    if (`/${key}` === pathname) {\n                        element.current.className = \"on\";\n                    } else {\n                        element.current.className = \"\";\n                    }\n                } catch (error) {\n                    // console.log(error);\n                }\n            }\n        }\n    }, [pathname]);\n    return (\n        <>\n            <div className=\"mhead\">\n                <div className=\"logo\">\n                    <Link to=\"/\">\n                        <img\n                            src=\"/global/mobile/img/logo.gif\"\n                            alt=\"영진전문대학교 글로벌존 영문로고\"\n                            />\n                    </Link>\n                </div>\n                <div className=\"login\">\n                    <div>\n                        <img src=\"/global/mobile/img/login_ico.gif\" alt=\"로그인 페이지 이동\"/>\n                    </div>\n                </div>\n            </div>\n            {pathname !== \"/login\" ? (\n                <ul className=\"tab no3\">\n                    <li>\n                        <Link ref={reservation} to=\"/reservation\" className=\"on\">\n                            예약 조회\n                        </Link>\n                    </li>\n                    <li>\n                        <Link ref={schedule} to=\"/schedule\">\n                            스케줄 조회\n                        </Link>\n                    </li>\n                    <li>\n                        <Link ref={result} to=\"/result\">\n                            결과 관리\n                        </Link>\n                    </li>\n                </ul>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n}\n","import defaultAxios from 'axios';\nimport {useEffect, useState} from \"react\";\nimport conf from \"../../conf/conf\";\n\n/**\n * Hooks - useAxios is returns response dataset\n * @param {AxiosStatic, function} axiosInstance\n * @param {object} opts url,\n * @return {object} state response data\n */\nconst useAxios = (opts, axiosInstance = defaultAxios) => {\n    const [state, setState] = useState({\n        loading: true,\n        error: null,\n        data: null\n    })\n    useEffect(() => {\n        axiosInstance(opts).then(data => {\n            setState({\n                ...state,\n                error: null,\n                loading: false,\n                data: data.data\n            })\n            console.log(data);\n        })\n    }, []);\n    return state;\n}\n\n/**\n * @param {AxiosStatic, function} axiosInstance\n * @param {object} opts url,\n */\nexport const postAxios = (opts, history, axiosInstance = defaultAxios) => {\n    let result = false;\n    axiosInstance(opts).then(data => {\n        console.log(data);\n        if (data.status === 202) {\n            alert(data.data.message);\n            history.push(\"/schedule\");\n        }\n        if (data.status == 201) {\n            alert(data.data.message);\n            history.push(\"/schedule\");\n        }\n    })\n}\n\nexport const getKoreanReservation = (date, std_kor_id, setData) => {\n    defaultAxios({url: conf.url + `/api/korean/reservation`, params: {search_date: date, std_kor_id}}).then(data => {\n        setData(data.data);\n    })\n}\n\nexport default useAxios;\n\n/**\n * getKoreanReservationResult\n * @param sect_id\n * @param search_month\n * @param std_kor_id\n */\nexport const getKoreanReservationResult = (sect_id, search_month, std_kor_id, setData) => {\n    defaultAxios({\n        url: conf.url + `/api/korean/reservation/result`, params: {\n            sect_id,\n            search_month,\n            std_kor_id\n        }\n    }).then(data => {\n        console.log(data);\n        setData(data.data);\n    })\n}\n\nexport const getForeignerSchedule = (std_for_id, end_date, start_date, setData) => {\n    console.log(conf.url + `/api/foreigner/schedule`, start_date, end_date);\n    defaultAxios({\n        url: conf.url + `/api/foreigner/schedule`, params: {\n            start_date,\n            end_date,\n            std_for_id\n        }\n    }).then(data => {\n        console.log(data)\n        setData(data.data);\n    })\n}\n\n/**\n *\n * @param sch_id\n * @param result_start_img\n * @param result_end_img\n * @todo => 이미지 데이터를 보내야 되는데 가질 못해!\n */\nexport const postForeignerReservationResult = (sch_id, data) => {\n    // let data = new FormData()\n    // data.append(\"result_start_img\", result_end_img);\n    // data.append(\"result_end_img\", result_end_img);\n    // console.log(result_start_img, result_end_img);\n    // defaultAxios({\n    //     method: 'post',\n    //     url: `${conf.url}/api/foreigner/reservation/result/${sch_id}`, data: {\n    //         // result_start_img,\n    //         // result_end_img,\n    //         data,\n    //         // attendance_std_kor_id_list : [1321704, 132123],\n    //         // absent_std_kor_id_list: []\n    //     },\n    //     headers: {\n    //         'Content-Type': 'multipart/form-data'\n    //     }\n    // }).then(res => {\n    //     console.log(res);\n    // })\n    // defaultAxios.post(conf.url+`/api/foreigner/reservation/result/${sch_id}`,\n    //             data\n    // , {\n    //     headers:{\n    //         'content-type':\"multipart/form-data\"\n    //     }\n    // }).then(res=>{\n    //     console.log(res)\n    // }).catch(e=>console.log(e));\n    let ajax = new XMLHttpRequest();\n    ajax.onreadystatechange = () => {\n        if (ajax.readyState === 0) {\n            ajax.setRequestHeader('content-type', 'multipart/form-data');\n        }\n        if (ajax.readyState === 4) {\n            console.log(ajax.response);\n        }\n    }\n\n    ajax.open(\"post\", conf.url + `/api/foreigner/reservation/result/${sch_id}`, true);\n    ajax.send(data);\n}\n\nexport const getForeignerReservation = (sch_id, std_for_id, setData) => {\n    defaultAxios({\n        url: conf.url + `/api/foreigner/reservation/${sch_id}`, params: {\n            std_for_id\n        }\n    }).then(res => {\n        console.log(res);\n        setData(res.data);\n    })\n\n}\n\nexport const patchForeignerReservationPermission = (sch_id, permission_std_kor_id_list, not_permission_std_kor_id_list) => {\n\n    defaultAxios({\n        url: conf.url + `/api/foreigner/reservation/permission/${sch_id}`,\n        method: \"patch\",\n        data: {permission_std_kor_id_list, not_permission_std_kor_id_list},\n        headers: {\n            'Context-Type': \"application/json\"\n        }\n    }).then(\n        res => {\n\n        }\n    ).catch(e => {\n        console.log(e)\n    })\n\n}\n\nexport const postAdminForeignerAccount = (std_for_id, std_for_dept, std_for_name, std_for_lang, std_for_country, std_for_phone, std_for_mail, std_for_zoom_id, setState) => {\n    defaultAxios({\n        method: 'post',\n        url: conf.url + `/api/admin/foreigner/account`,\n        data: {\n            std_for_id,\n            std_for_dept,\n            std_for_name,\n            std_for_lang,\n            std_for_country,\n            std_for_phone,\n            std_for_mail,\n            std_for_zoom_id\n        }\n    }).then(res => {\n        console.log(res)\n        setState(true)\n    }).catch(e => console.log(e));\n}\n\n\nexport const getAdminForeignerWork = (setDataSet, sect_id = 5) => {\n\n    defaultAxios({\n        url: conf.url + `/api/admin/foreigner/work/${sect_id}`\n    }).then(res => {\n        console.log(res);\n        setDataSet(res.data);\n    })\n\n}\n\nexport const getAdminSection = (year) => {\n    defaultAxios({\n        url: conf.url + `/api/admin/section`,\n        params: {\n            year\n        }\n    })\n\n}\n\nexport const getKoreanSection = (std_kor_id, setState) => {\n    defaultAxios({\n        url: conf.url + `/api/korean/section`, params: {\n            std_kor_id\n        }\n    }).then(res => {\n        setState(res.data.data)\n    })\n}\n","import React, {useEffect, useState} from \"react\";\nimport useAxios, {postAxios} from \"../../../../modules/hooks/useAxios\";\nimport {useParams, useHistory} from 'react-router-dom';\nimport conf from \"../../../../conf/conf\";\nimport {useSelector} from \"react-redux\";\nimport {selectUser} from \"../../../../redux/userSlice/userSlice\";\nimport useClick from \"../../../../modules/hooks/useClick\";\n\n\n/**\n * Korean :: 신청 양식\n * @returns {JSX.Element}\n * @constructor\n * @todo setup\n */\nexport default function ApplicationForm() {\n    const {id: schId} = useParams();\n    const [data, setData] = useState();\n    const {loading, error, data: resData} = useAxios({url: conf.url + `/api/korean/schedule/${schId}`});\n    const user = useSelector(selectUser);\n    const history = useHistory();\n\n    async function getResData(loading, error, data) {\n        if (!loading) {\n            setData(data.data);\n        }\n    }\n\n\n    useEffect(() => {\n        getResData(loading, error, resData);\n    });\n\n    return (\n        data ?\n            <div className=\"wrap\">\n                <div className=\"apply_tit\">\n                    <h3 className=\"tit\">예약신청</h3>\n                    <p>\n                        신청인원 :<span> {data.sch_res_count} </span>/ {data.sch_ava_count}\n                    </p>\n                </div>\n\n                <div className=\"reservation_boxs mb30\">\n                    <div className=\"box blue\">\n                        <ul>\n                            <li>{`[${data.std_for_lang}] ${data.std_for_name}`}</li>\n                            <li className=\"eng\">{data.sch_time}</li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"input_box\">\n                    <p>신청 날짜</p>\n                    <input type=\"text\" value={data.sch_date} readOnly/>\n                </div>\n                <div className=\"input_box\">\n                    <p>신청 시간</p>\n                    <input type=\"text\" value={data.sch_time} readOnly/>\n                </div>\n                <div className=\"input_box\">\n                    <p>유학생</p>\n                    <input type=\"text\" value={data.std_for_name} readOnly/>\n                </div>\n                <div className=\"input_box\">\n                    <p>신청 학생</p>\n                    <input type=\"text\" value={user.name} readOnly/>\n                </div>\n                <div className=\"input_box\">\n                    <p>e-글로벌 존 예약 방침</p>\n                    <textarea readOnly defaultValue={\"[ 무단 예약 부도에 대한 동의 ] 예약 신청 후, 예약 취소 또는 관리자의 확인 없이\\n\" +\n                    \"예약 부도(일명 No Show)시, 관련 규정에 따라, 불이익이 주어짐에 동의합니다.\"}>\n\t\t\t\t</textarea>\n                </div>\n\n                <div className=\"agree\">\n                    <div className=\"all_agree\">\n                        <input type=\"checkbox\" id=\"a1\" name=\"전체동의\"/>\n                        <label htmlFor=\"a1\">\n                            <span>e - 글로벌 존 예약 방침에 동의합니다.</span>\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"btn_wrap\" onClick={async ()=>{\n                    let agreement = document.getElementById(\"a1\").checked;\n                    if(agreement){\n                        postAxios({url:conf.url+`/api/korean/reservation/${schId}`, method:\"post\", data:{\n                            std_kor_id: user.id\n                            }},history);\n                    }else{\n                        alert(\"e-글로벌 존 예약 방침에 동의하셔야 신청 할 수 있습니다.\");\n                    }\n                }} style={{cursor:\"pointer\"}}>\n                    <div>신청하기</div>\n                </div>\n            </div> : <>Loading</>\n    )\n        ;\n}\n","/**\n * parseDate: get Date Object and return YYYY-MM-DD\n * @param {Date} date\n * @returns {string}\n */\nconst parseDate = (date) => {\n    let dateString;\n    dateString = `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() +1) : (date.getMonth()+1)}-${date.getDate()}`;\n    return dateString;\n};\n\nexport default parseDate;","import {createSlice} from \"@reduxjs/toolkit\";\nimport parseDate from \"../../modules/parseDate\";\n\n/**\n * ReduxSlice - conf\n * @type {Slice<{dept: {}}, {setDept: reducers.setDept}, string>}\n */\nexport const confSlice = createSlice({\n    name: \"conf\",\n    initialState: {\n        dept: {},\n        today: parseDate(new Date(Date.now())),\n        selectDate: parseDate(new Date(Date.now())),\n    },\n    reducers: {\n        setDept: (state, action) => {\n            let data = action.payload.data;\n            if (typeof data === \"object\") {\n                for (let index in data) {\n                    data[index].dept_name = data[index].dept_name.split(\"_\");\n                }\n            }\n            state.dept = data;\n        },\n        /**\n         * setSelectDate\n         * @param {Date} action.payload\n         */\n        setSelectDate: (state, action) => {\n            state.selectDate = action.payload;\n        },\n\n\n        setTodayToday: (state) => {\n            state.today = parseDate(new Date(Date.now()));\n        },\n        setTodayFuture: (state) => {\n            state.today = parseDate(new Date('2020-12-1'));\n        },\n    },\n});\n\nexport const {setDept, setSelectDate, setTodayFuture, setTodayToday} = confSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = amount => dispatch => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectDept = (state) => state.conf.dept;\nexport const selectToday = (state) => state.conf.today;\nexport const selectSelectDate = (state) => state.conf.selectDate;\n\nexport default confSlice.reducer;\n","import React from \"react\";\nimport moment from 'moment';\nimport ReactCalendar from \"react-calendar\"\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {selectSelectDate, setSelectDate} from \"../../redux/confSlice/confSlice\";\nimport parseDate from \"../../modules/parseDate\";\n\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            month: moment(),\n            selected: moment().startOf('day')\n        };\n\n        this.previous = this.previous.bind(this);\n        this.next = this.next.bind(this);\n    }\n\n    previous() {\n        const {\n            month,\n        } = this.state;\n\n        this.setState({\n            month: month.subtract(1, 'month'),\n        });\n    }\n\n    next() {\n        const {\n            month,\n        } = this.state;\n\n        this.setState({\n            month: month.add(1, 'month'),\n        });\n    }\n\n    select(day) {\n        this.setState({\n            selected: day.date,\n            month: day.date.clone(),\n        });\n    }\n\n    renderWeeks() {\n        let weeks = [];\n        let done = false;\n        let date = this.state.month.clone().startOf(\"month\").add(\"w\" - 1).day(\"Sunday\");\n        let count = 0;\n        let monthIndex = date.month();\n\n        const {\n            selected,\n            month,\n        } = this.state;\n\n        while (!done) {\n            weeks.push(\n                <Week key={date}\n                      date={date.clone()}\n                      month={month}\n                      select={(day) => this.select(day)}\n                      selected={selected}/>\n            );\n\n            date.add(1, \"w\");\n            done = count++ > 2 && monthIndex !== date.month();\n            monthIndex = date.month();\n        }\n\n        return weeks;\n    };\n\n    renderMonthLabel() {\n        const {\n            month,\n        } = this.state;\n\n        return <span className=\"month-label\">{month.format(\"YYYY\")}년 {month.format(\"M\")}월</span>;\n    }\n\n    render() {\n        return (\n            <section className=\"calendar\">\n                <header className=\"header\">\n                    <div className=\"month-display row\">\n                        <span onClick={this.previous} style={{cursor:\"pointer\",fontSize:\"5px\", marginLeft:\"10px\"}}>지난 달</span>\n                        {this.renderMonthLabel()}\n                        <span onClick={this.next} style={{cursor:\"pointer\",fontSize:\"5px\", marginRight:\"10px\"}}>다음 달</span>\n                    </div>\n                    <DayNames/>\n                </header>\n                {this.renderWeeks()}\n            </section>\n        );\n    }\n}\n\nclass DayNames extends React.Component {\n    render() {\n        return (\n            <div className=\"row day-names\">\n                <span className=\"day\" style={{color:\"red\"}}>일</span>\n                <span className=\"day\">월</span>\n                <span className=\"day\">화</span>\n                <span className=\"day\">수</span>\n                <span className=\"day\">목</span>\n                <span className=\"day\">금</span>\n                <span className=\"day\">토</span>\n            </div>\n        );\n    }\n}\n\nconst Week = (props) => {\n    const dispatch = useDispatch();\n    let days = [];\n    let {\n        date,\n    } = props;\n\n    const {\n        month,\n        selected,\n        select,\n    } = props;\n\n    for (var i = 0; i < 7; i++) {\n        let day = {\n            name: date.format(\"dd\").substring(0, 1),\n            number: date.date(),\n            isCurrentMonth: date.month() === month.month(),\n            isToday: date.isSame(new Date(), \"day\"),\n            date: date\n        };\n        days.push(\n            <Day day={day}\n                 selected={selected}\n                 select={() => {\n                     select(day)\n                     console.log(day.date._d)\n                     dispatch(setSelectDate(parseDate(day.date._d)));\n                 }}\n\n            />\n        );\n\n        date = date.clone();\n        date.add(1, \"day\");\n    }\n\n    return (\n        <div className=\"row week\" key={days[0]}>\n            {days}\n        </div>\n    );\n\n\n}\n\nclass Day extends React.Component {\n    render() {\n        const {\n            day,\n            day: {\n                date,\n                isCurrentMonth,\n                isToday,\n                number\n            },\n            select,\n            selected\n        } = this.props;\n\n        return (\n            <span\n                key={date.toString()}\n                className={\"day\" + (isToday ? \" today\" : \"\") + (isCurrentMonth ? \"\" : \" different-month\") + (date.isSame(selected) ? \" selected\" : \"\")}\n                onClick={() => select(day)}>{number}</span>\n        );\n    }\n}\n\n// /**\n//  * Calendar <<추가예정>>\n//  * @returns {JSX.Element}\n//  * @constructor\n//  * @todo make Calendar\n//  */\n// export default function Calendar() {\n// \tconst selectDate = useSelector(selectSelectDate);\n// \treturn (\n// \t\t<div className=\"calendar\">\n// \t\t\t{/*<a href=\"/reservation/1\">*/}\n// \t\t\t\t<div>\n// \t\t\t\t\t<ReactCalendar\n// \t\t\t\t\tonChange={date => console.log(date)}\n// \t\t\t\t\tvalue={selectDate}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t{/*</a>*/}\n// \t\t</div>\n// \t);\n// }\n\nexport default Calendar;","import React from \"react\";\nimport conf from \"../../conf/conf\";\nimport {useHistory} from 'react-router-dom'\nimport useClick from \"../../modules/hooks/useClick\";\n\n// English -> .box puple\n// Japanese -> .box blue\n// China -> .box pink\n\n/**\n * status\n * 출석인증 완료 : confirm\n * 출석인증 대기 : done\n * 예약 대기 : pending\n * 예약 완료 : reserved\n * 미참석 : nonattendance\n */\nconst CONFIRM = \"출석인증 완료\";\nconst DONE = \"출석인증 대기\";\nconst PENDING = \"예약 대기\";\nconst RESERVED = \"예약 완료\";\nconst NON_ATTENDANCE = \"미참석\";\n\n/**\n * Item for Mobile Schedule\n * @param id\n * @param language\n * @param name\n * @param time\n * @param status\n * @param zoomPw\n * @param zoomId\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Item({id ,language, name, time, status, zoomPw, zoomId}) {\n\n    const history = useHistory();\n\n    const application = useClick(()=>{\n        history.push(`schedule/${id}`)\n    });\n\n    const setStatus = (status) => {\n        if (typeof status === \"boolean\") {\n            return status;\n        } else {\n            switch (status) {\n                case \"confirm\":\n                    return CONFIRM;\n                case \"done\":\n                    return DONE;\n                case \"pending\":\n                    return PENDING;\n                case \"reserved\":\n                    return RESERVED;\n                case \"absent\":\n                    return NON_ATTENDANCE;\n                default:\n                    break;\n            }\n        }\n    };\n    const scheduleInfo = {\n        class:\n            typeof status === \"boolean\" ? status ? \"box blue\" : \"box pink\" :\n                status === \"done\" || status === \"confirm\"\n                    ? \"box puple\"\n                    : status === \"pending\" || status === \"reserved\"\n                    ? \"box blue\"\n                    : \"box pink\",\n        language:\n            language === conf.language.ENGLISH ? \"[영어]\" : language === conf.language.JAPANESE ? \"[일본어]\" : \"[중국어]\",\n        name,\n        time,\n        status: setStatus(status),\n    };\n    return (\n        <>\n            <div className={scheduleInfo.class}>\n                <ul>\n                    <li>{`${scheduleInfo.language} ${scheduleInfo.name}`}</li>\n                    <li className=\"eng\">{scheduleInfo.time.map((e) => e)} </li>\n                </ul>\n                {\n                    status === \"reserved\"? <ul>\n                        <li>\n                            {/*줌 아이디 : {zoomId}*/}\n                        </li>\n                    </ul>:\n                        <></>\n                }\n                {((status) => {\n                    if (!typeof status === \"boolean\")\n                        if (status !== \"done\" && status !== \"confirm\") {\n                            return (\n                                <div>\n                                    <img src=\"/global/mobile/img/cancel_btn.png\" alt=\"삭제 버튼\"/>\n                                </div>\n                            );\n                        }\n                })(status)}\n                {((status) => {\n                    if (typeof status !== \"boolean\") {\n                        return <span>{status===\"reserved\"? `${scheduleInfo.status}` :`${scheduleInfo.status}`}</span>\n                    } else {\n                        return status ? <span ref={application}>예약</span> : <span>예약 불가능</span>;\n                    }\n                })(status)}\n            </div>\n            {/* <div className=\"box puple\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>[영어] 쉬라이 알리오트시나</li>\n\t\t\t\t\t<li className=\"eng\">AM 09:00 ~ PM 01:00 </li>\n\t\t\t\t</ul>\n\t\t\t\t<span>출석인증 대기</span>\n\t\t\t</div>\n\t\t\t<div className=\"box blue\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>[영어] 쉬라이 알리오트시나</li>\n\t\t\t\t\t<li className=\"eng\">AM 09:00 ~ PM 01:00 </li>\n\t\t\t\t</ul>\n\t\t\t\t<a href=\"#\">\n\t\t\t\t\t<img src=\"/img/cancel_btn.png\" alt=\"삭제 버튼\" />\n\t\t\t\t</a>\n\t\t\t\t<span>예약 대기</span>\n\t\t\t</div>\n\t\t\t<div className=\"box pink\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>[영어] 쉬라이 알리오트시나</li>\n\t\t\t\t\t<li className=\"eng\">AM 09:00 ~ PM 01:00 </li>\n\t\t\t\t</ul>\n\t\t\t\t<a href=\"#\">\n\t\t\t\t\t<img src=\"/img/cancel_btn.png\" alt=\"삭제 버튼\" />\n\t\t\t\t</a>\n\t\t\t\t<span>예약 완료</span>\n\t\t\t</div>\n\t\t\t<div className=\"box pink\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>[영어] 쉬라이 알리오트시나</li>\n\t\t\t\t\t<li className=\"eng\">AM 09:00 ~ PM 01:00 </li>\n\t\t\t\t</ul>\n\t\t\t\t<a href=\"#\">\n\t\t\t\t\t<img src=\"/img/cancel_btn.png\" alt=\"삭제 버튼\" />\n\t\t\t\t</a>\n\t\t\t\t<span>미참석</span>\n\t\t\t</div> */}\n        </>\n    );\n}\n","import React, {useEffect} from \"react\";\nimport Item from \"./Item\";\nimport {useSelector} from \"react-redux\";\nimport {selectToday} from \"../../redux/confSlice/confSlice\";\n/**\n *  Item's props\n * language\n * foreignName\n * startTime\n * endTime\n * status => 출석 인증 완료, 출석 인증 대기, 예약 대기, 예약 완료, 미참석\n */\n\n/**\n * List for Item\n * @param tabView\n * @param data\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function List({tabView, data}) {\n    const toDay = useSelector(selectToday);\n    useEffect(() => {\n        console.log(data);\n    })\n    return tabView ? (\n        <div className=\"reservation_boxs tab_wrap\">\n            {typeof data === \"object\" && data.map((item) => {\n                return (\n                    <>\n                        <Item\n                            id={item.sch_id}\n                            language={item.std_for_lang}\n                            name={item.std_for_name}\n                            time={[item.sch_start_date.substr(10, 9), item.sch_end_date.substr(10, 9)]}\n                            status={item.sch_res_available}\n                        />\n                    </>\n                )\n            })}\n        </div>\n    ) : (\n        <div className=\"reservation_boxs\">\n            {data.map((item) => {\n                let status;\n                if (new Date(item.sch_end_date) > new Date(toDay)) {\n                    console.log(\"시작안됨\")\n                    if (item.res_state_of_permission) {\n                        status = \"reserved\";\n                    } else {\n                        status = \"pending\";\n                    }\n                } else {\n                    console.log('완료됨');\n                    if(item.sch_state_of_result_input){\n                        if(item.res_state_of_attendance){\n                            status = \"confirm\";\n                        }else{\n                            status = \"absent\";\n                        }\n                    } else {\n                        status = \"done\"\n                    }\n                }\n\n                console.log(status);\n                return (\n                    <Item\n                        id={item.sch_id}\n                        language={item.std_for_lang}\n                        name={item.std_for_name}\n                        time={[item.sch_start_date.substr(10, 9), item.sch_end_date.substr(10, 9)]}\n                        status={status}\n                        zoomPw = {item.sch_for_zoom_pw}\n                        zoomId = {item.std_for_zoom_id}\n                    />\n                )\n            })}\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Calendar from \"components/mobile/Calendar\";\nimport List from \"components/mobile/List\";\nimport mockup from \"test/mockup\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectSelectDate} from \"../../../../redux/confSlice/confSlice\";\nimport useAxios, {getKoreanReservation} from \"../../../../modules/hooks/useAxios\";\nimport conf from \"../../../../conf/conf\";\nimport {selectUser} from \"../../../../redux/userSlice/userSlice\";\n\n/**\n * Korean :: 예약 조회\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Reservation() {\n\tconst dispatch = useDispatch();\n\tconst selectDate = useSelector(selectSelectDate);\n\tconst user = useSelector(selectUser);\n\n\tconst [data, setData] = useState();\n\tlet {loading, error, data:resData}  = useAxios({url:conf.url+`/api/korean/reservation`, params:{search_date:selectDate, std_kor_id:user.id}});\n\tconst axios = useAxios;\n\tfunction getResData(loading, error, data){\n\t\tif(!loading){\n\t\t\tsetData(data);\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tgetResData(loading, error, resData);\n\t},[]);\n\n\tfunction setResData(loading, error, data){\n\t\tif(!loading){\n\t\t\tsetData(data);\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tgetKoreanReservation(selectDate, user.id, setData);\n\t},[selectDate]);\n\n\treturn (\n\t\t<>\n\t\t\t<Calendar />\n\t\t\t{\n\t\t\t\ttypeof data === 'object' && data.hasOwnProperty(\"data\")?\n\t\t\t\t\t<List data={data.data} />\n\t\t\t\t\t:<>신청 된 예약이 없습니다.</>\n\t\t\t}\n\t\t</>\n\t);\n}\n// {\n// \tlanguage: \"Japanese\",\n// \t\tname: \"이재원\",\n// \ttime: [\"시작시간\", \"종료시간\"],\n// \tstatus: \"done\",\n// },","import React, {useEffect, useState} from \"react\";\nimport {getKoreanReservationResult, getKoreanSection} from \"../../../../modules/hooks/useAxios\";\nimport {useSelector} from \"react-redux\";\nimport {selectUser} from \"../../../../redux/userSlice/userSlice\";\nimport {selectToday} from \"../../../../redux/confSlice/confSlice\";\nimport moment from \"moment\";\n\n/**\n * Korean :: 결과 조회\n * @returns {JSX.Element}\n * @constructor\n * @todo 섹션 아이디 받아와야함\n */\nexport default function Results() {\n    const user = useSelector(selectUser);\n    const today = useSelector(selectToday);\n    const [data, setData] = useState();\n    const [sect, setSect] = useState();\n    const [selectSect, setSelectSect] = useState();\n    const [selectSectId, setSelectSectId] = useState();\n    useEffect(() => {\n        // getKoreanReservationResult(5,8,1321704, setData);\n        getKoreanSection(user.id, setSect);\n    }, []);\n    useEffect(() => {\n        console.log(sect);\n        if (typeof sect === \"object\") {\n            setSelectSect(sect[0]);\n        }\n    }, [sect])\n    useEffect(() => {\n        console.log(selectSect);\n        if (selectSect) {\n            getKoreanReservationResult(selectSect.sect_id, moment(today).format(\"M\"), user.id, setData);\n        }\n    }, [selectSect])\n    useEffect(() => {\n        console.log(data);\n    })\n\n\n    const handleChange = (e) => {\n        console.log(typeof e.target.value);\n        getKoreanReservationResult(e.target.value, moment(today).format(\"M\"), user.id, setData);\n        sect.map(v=>{\n                console.log(v);\n            if(e.target.value == v.sect_id){\n                setSelectSect(v);\n            }\n        })\n        window.easydropdown.all();\n    }\n\n    return (\n        <div>\n            <div className=\"wrap mobile_result\">\n                <p className=\"tit\">{selectSect && selectSect.sect_name}</p>\n                <div className=\"point_info\">\n                    <p>\n                        <span className=\"name\">{user.name}</span> 학생의\n                        <br/>\n                        글로벌 포인트 현황\n                    </p>\n                    <div className=\"result\">\n                        {/*<span className=\"rank\">상위 10%</span>*/}\n                        <span>{selectSect && selectSect.res_count}</span>\n                        <span className=\"times\">회</span>\n                    </div>\n                </div>\n\n                <select name=\"\" id=\"\" className=\"mt50\" onChange={handleChange}>\n                    {\n                        typeof sect === \"object\" && sect.length > 0 && sect.map(v => {\n                            return (<option value={v.sect_id}>{v.sect_name}</option>)\n                        })\n                    }\n                </select>\n\n                <div className=\"history_wrap\">\n                    <div className=\"month_move\">\n                        <p>2020년 7월</p>\n                        <div className=\"arrow\">\n                            <div>\n                                <img src=\"/global/mobile/img/month_move_prev.gif\" alt=\"이전 달\"/>\n                            </div>\n                            <div>\n                                <img src=\"/global/mobile/img/month_move_next.gif\" alt=\"다음 달\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <a href=\"\"></a>\n                    </div>\n                    <table>\n                        <colgroup>\n                            <col width=\"30%\"/>\n                            <col width=\"70%\"/>\n                        </colgroup>\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">일시</th>\n                            <th scope=\"col\">유학생</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            typeof data === \"object\" && data.data.map(v => {\n                                return (\n                                    <tr>\n                                        <td>{v.sch_start_date.substr(5, 20)}</td>\n                                        <td>{v.std_for_name}</td>\n                                    </tr>)\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport List from \"./List\";\nimport useClick from \"modules/hooks/useClick\";\nimport mockup from \"../../test/mockup\";\n\n/**\n * TabView for Mobile\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function TabView({list}) {\n\tconst [data, setData] = useState(list); // 스케줄 데이터 배열로 초기화\n\tconst setClass = (e) => {\n\t\tfor (const key in tabs) {\n\t\t\tif (tabs.hasOwnProperty(key)) {\n\t\t\t\ttabs[key].current.className = key;\n\t\t\t}\n\t\t}\n\t\tfor (const key in tabs) {\n\t\t\tif (tabs.hasOwnProperty(key)) {\n\t\t\t\tconst element = tabs[key];\n\t\t\t\tif (element.current === e.target) {\n\t\t\t\t\telement.current.className = \"on\";\n\t\t\t\t\tsetData(); // 클릭 된 탭에 따라서 스케줄 셋\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tuseEffect(()=>{console.log(list)});\n\tconst tabView = useClick(setClass);\n\tconst tabs = {\n\t\tall: useRef(),\n\t\teng: useRef(),\n\t\tjp: useRef(),\n\t\tch: useRef(),\n\t};\n\treturn (\n\t\t<>\n\t\t\t<ul className=\"sch_tab\" ref={tabView}>\n\t\t\t\t<li>\n\t\t\t\t\t<div ref={tabs.all} className=\"on\">\n\t\t\t\t\t\t전체\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<div ref={tabs.eng} className=\"eng\">\n\t\t\t\t\t\t영어\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<div ref={tabs.jp} className=\"jp\">\n\t\t\t\t\t\t일본어\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<div ref={tabs.ch} className=\"ch\">\n\t\t\t\t\t\t중국어\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<List tabView data={list}></List>\n\t\t</>\n\t);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Calendar from \"components/mobile/Calendar\";\nimport TabView from \"components/mobile/TabView\";\nimport useAxios from \"../../../../modules/hooks/useAxios\";\nimport conf from \"../../../../conf/conf\";\n\n/**\n * Korean :: 스케줄 조회\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Schedules() {\n\tconst [data, setData] = useState();\n\tconst {loading, error, data:resData}  = useAxios({url:conf.url+`api/korean/schedule`});\n\tasync function getResData(loading, error, data){\n\t\tif(!loading){\n\t\t\tconsole.log(data.result);\n\t\t\tsetData(data.result);\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tgetResData(loading, error, resData);\n\t});\n\treturn (\n\t\t<>\n\t\t\t<Calendar />\n\t\t\t{!loading?<TabView list={data}/>:<></>}\n\t\t</>\n\t);\n}\n","import React from \"react\";\n\n/**\n * Login - <<추가예정>>\n * @returns {JSX.Element}\n * @constructor\n * @todo use Google Oauth\n */\nexport default function Login() {\n\treturn (\n\t\t<div className=\"wrap mobile_login\">\n\t\t\t<a href=\"\">g.yju.ac.kr 계정으로 로그인하기</a>\n\t\t\t<p>@g.yju.ac.kr 로 끝나는 G-suite 계정만 사용이 가능합니다.</p>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\n/**\n * Footer for Mobile\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Footer() {\n\treturn (\n\t\t<div className=\"mfooter\">\n\t\t\t<p>\n\t\t\t\t대표전화 053-940-511441527 대구광역시 북구 복현로 35 (복현2동 218){\" \"}\n\t\t\t\t<span>COPYRIGHT© YEUNGJIN UNIVERSITY. All RIGHTS RESERVED.</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport MobileHeader from \"components/mobile/Header\";\nimport { Reservation, Schedules as Schedule, Results, ApplicationForm } from \"routes/Mobile/Korean\";\nimport MobileLogin from \"components/mobile/Login\";\nimport Footer from \"components/mobile/Footer\";\n\n/**\n * MobileRouter - Router for Mobile(Korean students)\n * @returns {JSX.Element}\n */\nexport default () => {\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<MobileHeader />\n\t\t\t<Switch>\n\t\t\t\t<Redirect exact path=\"/\" to={`/reservation`} />\n\n\t\t\t\t{/* 예약 조회 페이지 */}\n\t\t\t\t<Route exact path=\"/reservation\" component={Reservation} />\n\t\t\t\t<Route path=\"/schedule/:id\" component={ApplicationForm} />\n\t\t\t\t{/* 예약 폼 */}\n\n\t\t\t\t{/* 스케쥴 페이지 */}\n\t\t\t\t<Route path=\"/schedule\" component={Schedule} />\n\n\t\t\t\t{/* 결과 페이지 */}\n\t\t\t\t<Route path=\"/result\" component={Results} />\n\n\t\t\t\t{/* 임시 로그인 */}\n\t\t\t\t<Route path=\"/login\" component={MobileLogin} />\n\t\t\t</Switch>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst modalStyle = {\n\tcontent: {\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tright: \"auto\",\n\t\tbottom: \"auto\",\n\t\tmarginRight: \"-50%\",\n\t\ttransform: \"translate(-50%, -50%)\",\n\t\tzIndex: \"2\",\n\t\toverflow: \"hidden\",\n\t},\n};\nModal.setAppElement(document.getElementById(\"modal-root\"));\n\n/**\n * Modal from react-modal\n * @param children\n * @param isOpen\n * @param handleClose\n * @returns {JSX.Element}\n */\nexport default function ({ children, isOpen, handleClose }) {\n\treturn (\n\t\t<Modal style={modalStyle} isOpen={isOpen} onRequestClose={handleClose}>\n\t\t\t{children}\n\t\t</Modal>\n\t);\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Modal - 스케줄 입력\n * @param closeSch\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function InsertSchedule({ closeSch }) {\n\tuseEffect(() => {\n\t\twindow.easydropdown.all();\n\t}, []);\n\treturn (\n\t\t<div className=\"popup sch\">\n\t\t\t<p className=\"tit\">스케줄 입력</p>\n\t\t\t<div className=\"select_area\">\n\t\t\t\t<div className=\"area\">\n\t\t\t\t\t<p>날짜 선택</p>\n\t\t\t\t\t<div className=\"date\">2020-07-13</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"area\">\n\t\t\t\t\t<p>시간 선택</p>\n\t\t\t\t\t<select name=\"catgo1\" className=\"dropdown\">\n\t\t\t\t\t\t<option>09시 00분</option>\n\t\t\t\t\t\t<option>09시 30분</option>\n\t\t\t\t\t\t<option>10시 00분</option>\n\t\t\t\t\t\t<option>10시 30분</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<span>-</span>\n\t\t\t\t\t<select name=\"catgo1\" className=\"dropdown\">\n\t\t\t\t\t\t<option>09시 00분</option>\n\t\t\t\t\t\t<option>09시 30분</option>\n\t\t\t\t\t\t<option>10시 00분</option>\n\t\t\t\t\t\t<option>10시 30분</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"area student\">\n\t\t\t\t\t<p>유학생 선택</p>\n\t\t\t\t\t<select name=\"catgo3\" className=\"dropdown\">\n\t\t\t\t\t\t<option>바라트벡 울잔</option>\n\t\t\t\t\t\t<option>카와이 히나코</option>\n\t\t\t\t\t\t<option>드로즈드 캣시아</option>\n\t\t\t\t\t\t<option>알무카메토바 아니사</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"regist_btn\">등록</div>\n\t\t\t</div>\n\t\t\t<div className=\"scroll_area\">\n\t\t\t\t<table className=\"pop_table2\">\n\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t<col width=\"15%\" />\n\t\t\t\t\t\t<col width=\"20%\" />\n\t\t\t\t\t\t<col width=\"20%\" />\n\t\t\t\t\t</colgroup>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>1</td>\n\t\t\t\t\t\t\t<td>2020-07-22</td>\n\t\t\t\t\t\t\t<td>09:00 - 12:30</td>\n\t\t\t\t\t\t\t<td>바라트벡 울잔</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc=\"/global/img/row_del_btn.gif\"\n\t\t\t\t\t\t\t\t\t\talt=\"유힉생 스케줄 삭제\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>2</td>\n\t\t\t\t\t\t\t<td>2020-07-22</td>\n\t\t\t\t\t\t\t<td>09:00 - 12:30</td>\n\t\t\t\t\t\t\t<td>알무카메토바 아니사</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc=\"/global/img/row_del_btn.gif\"\n\t\t\t\t\t\t\t\t\t\talt=\"유힉생 스케줄 삭제\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>3</td>\n\t\t\t\t\t\t\t<td>2020-07-22</td>\n\t\t\t\t\t\t\t<td>09:00 - 12:30</td>\n\t\t\t\t\t\t\t<td>바라트벡 울잔</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc=\"/global/img/row_del_btn.gif\"\n\t\t\t\t\t\t\t\t\t\talt=\"유힉생 스케줄 삭제\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div className=\"btn_area right\">\n\t\t\t\t<Link className=\"bbtn blue\">등록</Link>\n\t\t\t\t<div className=\"bbtn white\" onClick={closeSch}>\n\t\t\t\t\t닫기\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {getForeignerReservation, patchForeignerReservationPermission} from \"../../../modules/hooks/useAxios\";\nimport {useSelector} from \"react-redux\";\nimport {selectUser} from \"../../../redux/userSlice/userSlice\";\nimport {useHistory}  from 'react-router-dom'\n\n/**\n * Modal - 신청 학생 명단보기\n * @param handleClose\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ShowList({handleClose, sch_id}) {\n    const [data, setData] = useState();\n    const [studentList, setStudentList] = useState();\n    const [permission, setPermission] = useState([]);\n    const user = useSelector(selectUser);\n    const history = useHistory()\n\n    useEffect(() => {\n        window.easydropdown.all();\n        getForeignerReservation(sch_id, user.id, setData);\n        console.log(sch_id);\n    }, []);\n    useEffect(() => {\n        if (data) {\n            console.log(data.data);\n            let array = []\n            data.data.forEach(v => {\n                array.push(v.std_kor_id);\n            })\n            setStudentList(array);\n        }\n        window.easydropdown.all();\n    }, [data])\n    return (\n        <div className=\"popup list\">\n            <div className=\"top_tit\">\n                <div className=\"left\">\n                    <p className=\"tit\">신청 학생 명단보기</p>\n                    <p className=\"txt\">{data && data.data ? data.data[0].sch_end_date : \"nodata\"}</p>\n                </div>\n                <p className=\"name\">바라트벡 울잔</p>\n            </div>\n\n            <div className=\"student_list\">\n                <ul>\n                    {data && data.data ? data.data.map((v, index) => {\n                        let permission = v.res_state_of_permission;\n                        return <li key={v.std_kor_id + \"index\"}>\n                            <div className=\"student\">\n                                <p className=\"name\">{v.std_kor_name}</p>\n                                <select name={\"catgo\"} className={\"dropdown\"} id={v.std_kor_id} key={`${v.std_kor_id}`}>\n                                    <option value={true} selected={permission}>승인</option>\n                                    <option value={false} selected={!permission}>미승인</option>\n                                </select>\n                            </div>\n                        </li>\n                    }) : <>Loading</>}\n                    {/*<li>*/}\n                    {/*\t<div className=\"student\">*/}\n                    {/*\t\t<p className=\"name\">이구슬</p>*/}\n                    {/*\t\t<select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*\t\t\t<option value=\"attendance\">승인</option>*/}\n                    {/*\t\t\t<option value=\"absent\">미승인</option>*/}\n                    {/*\t\t</select>*/}\n                    {/*\t</div>*/}\n                    {/*</li>*/}\n                    {/*<li>*/}\n                    {/*\t<div className=\"student\">*/}\n                    {/*\t\t<p className=\"name\">이구슬</p>*/}\n                    {/*\t\t<select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*\t\t\t<option value=\"attendance\">승인</option>*/}\n                    {/*\t\t\t<option value=\"absent\">미승인</option>*/}\n                    {/*\t\t</select>*/}\n                    {/*\t</div>*/}\n                    {/*</li>*/}\n                    {/*<li>*/}\n                    {/*\t<div className=\"student\">*/}\n                    {/*\t\t<p className=\"name\">이구슬</p>*/}\n                    {/*\t\t<select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*\t\t\t<option value=\"attendance\">승인</option>*/}\n                    {/*\t\t\t<option value=\"absent\">미승인</option>*/}\n                    {/*\t\t</select>*/}\n                    {/*\t</div>*/}\n                    {/*</li>*/}\n                    {/*<li>*/}\n                    {/*\t<div className=\"student\">*/}\n                    {/*\t\t<p className=\"name\">이구슬</p>*/}\n                    {/*\t\t<select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*\t\t\t<option value=\"attendance\">승인</option>*/}\n                    {/*\t\t\t<option value=\"absent\">미승인</option>*/}\n                    {/*\t\t</select>*/}\n                    {/*\t</div>*/}\n                    {/*</li>*/}\n                    {/*<li>*/}\n                    {/*\t<div className=\"student\">*/}\n                    {/*\t\t<p className=\"name\">이구슬</p>*/}\n                    {/*\t\t<select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*\t\t\t<option value=\"attendance\">승인</option>*/}\n                    {/*\t\t\t<option value=\"absent\">미승인</option>*/}\n                    {/*\t\t</select>*/}\n                    {/*\t</div>*/}\n                    {/*</li>*/}\n                </ul>\n            </div>\n\n            <div className=\"btn_area\">\n                <div className=\"bbtn white left\">일괄승인</div>\n                <div className=\"right\">\n                    <div className=\"bbtn mint\" onClick={() => {\n                        let permission_std_kor_id_list = [];\n                        let not_permission_std_kor_id_list = [];\n                        data.data.map(v => {\n                        console.log(typeof document.getElementById(`${v.std_kor_id}`).value)\n                        if (document.getElementById(`${v.std_kor_id}`).value === \"true\") {\n                        permission_std_kor_id_list.push((v.std_kor_id));\n                    } else {\n                        not_permission_std_kor_id_list.push((v.std_kor_id));\n                    }\n                    })\n                        patchForeignerReservationPermission(sch_id, permission_std_kor_id_list, not_permission_std_kor_id_list);\n                        history.push('/');\n                    }}>저장\n                    </div>\n                    <div className=\"bbtn darkGray\" onClick={handleClose}>닫기</div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect} from \"react\";\n\n/**\n * Modal - 출석 결과 미승인\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ConfirmResult() {\n    useEffect(() => {\n        window.easydropdown.all();\n    }, []);\n    return (\n        <div className=\"popup not_attend\">\n            <div className=\"left_wrap\">\n                <p className=\"tit\">출석결과 미승인</p>\n                <table className=\"pop_table3\">\n                    <colgroup>\n                        <col width=\"12%\" span=\"2\"/>\n                    </colgroup>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <div className=\"table_check\">\n                                <input type=\"checkbox\" id=\"a0\" name=\"\"/>\n                                <label for=\"a0\"></label>\n                            </div>\n                        </th>\n                        <th scope=\"col\">순번</th>\n                        <th scope=\"col\">일시</th>\n                        <th scope=\"col\">유학생 이름</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <div className=\"table_check\">\n                                <input type=\"checkbox\" id=\"a1\" name=\"\"/>\n                                <label for=\"a1\"></label>\n                            </div>\n                        </td>\n                        <td>1</td>\n                        <td>2020-07-13 13:00~13:40</td>\n                        <td>바라트벡 울잔</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div className=\"table_check\">\n                                <input type=\"checkbox\" id=\"a2\" name=\"\"/>\n                                <label for=\"a2\"></label>\n                            </div>\n                        </td>\n                        <td>2</td>\n                        <td>2020-07-13 13:00~13:40</td>\n                        <td>바라트벡 울잔</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div className=\"table_check\">\n                                <input type=\"checkbox\" id=\"a3\" name=\"\"/>\n                                <label for=\"a3\"></label>\n                            </div>\n                        </td>\n                        <td>3</td>\n                        <td>2020-07-13 13:00~13:40</td>\n                        <td>바라트벡 울잔</td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div className=\"btn_area right\">\n                    <a href=\"\" className=\"bbtn mint\">\n                        일괄승인\n                    </a>\n                </div>\n            </div>\n\n            <div className=\"right_wrap\">\n                <p className=\"tit\">학생 목록</p>\n\n                <div className=\"student_list\">\n                    <ul>\n                        <li>\n                            <div className=\"student\">\n                                <p className=\"name\">이구슬</p>\n                                <select name=\"catgo\" className=\"dropdown\">\n                                    <option value=\"attendance\">출석</option>\n                                    <option value=\"absent\">결석</option>\n                                </select>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"student\">\n                                <p className=\"name\">이구슬</p>\n                                <select name=\"catgo\" className=\"dropdown\">\n                                    <option value=\"attendance\">출석</option>\n                                    <option value=\"absent\">결석</option>\n                                </select>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"student\">\n                                <p className=\"name\">이구슬</p>\n                                <select name=\"catgo\" className=\"dropdown\">\n                                    <option value=\"attendance\">출석</option>\n                                    <option value=\"absent\">결석</option>\n                                </select>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"img_upload\">\n                    <div>사진 1</div>\n                    <div>사진 2</div>\n                </div>\n\n                <p className=\"attend_rate\">\n                    출석율 : <span>60%</span>\n                </p>\n\n                <div className=\"btn_area right\">\n                    <a href=\"\" className=\"bbtn gray\">\n                        사진업로드\n                    </a>\n                    <a href=\"\" className=\"bbtn mint\">\n                        저장\n                    </a>\n                    <a href=\"\" className=\"bbtn\">\n                        닫기\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n","const RESERVATION_NOTHING = 0,\n    RESERVATION_IN_PROGRESS = 1,\n    RESERVATION_DONE = 2,\n    RESULT_IN_PROGRESS = 3,\n    RESULT_DONE = 4;\n\nclass ScheduleConf {\n   static STATUS = {\n        RESERVATION_NOTHING,\n        RESERVATION_IN_PROGRESS,\n        RESERVATION_DONE,\n        RESULT_IN_PROGRESS,\n        RESULT_DONE\n    }\n\n}\n\nexport default ScheduleConf;","import React, {useEffect, useState} from \"react\";\nimport Modal from \"components/common/modal/Modal\";\nimport ShowList from \"components/common/modal/ShowList\";\nimport useClick from \"../../modules/hooks/useClick\";\nimport ConfirmResult from \"./modal/ConfirmResult\";\nimport conf from 'conf/conf';\nimport ScheduleConf from \"../../conf/scheduleConf\";\n\n/**\n * Schedule - a Schedule\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Schedule = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    function handleOpen() {\n        setIsOpen(true);\n    }\n\n    function handleClose() {\n        setIsOpen(false);\n    }\n\n    const ref = useClick(handleOpen);\n    return (\n        <div className=\"status\" ref={ref}>\n            <p className={props.status}>{props.children}</p>\n            <Modal isOpen={isOpen} onRequestClose={handleClose}>\n                {props.status === \"yellow\" ? (\n                    <ConfirmResult scheduleId={props.schduleId}/>\n                ) : (\n                    <ShowList handleClose={handleClose} isOpen={isOpen}/>\n                )}\n            </Modal>\n        </div>\n    );\n};\n\n/**\n * ScheduleTable - Manager :: 스케줄 및 예약관리\n * @param scheduleList\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ScheduleTable({scheduleList}) {\n    // state1 :: [예약현황] 미승인 / 총 신청 학생\n    // state2 :: [예약 승인 완료]\n    // state3 :: [결과 미입력] 출석 학생\n    // state4 :: [결과 입력 완료]\n    // state5 :: [관리자 미승인] 출석 학생\n    // state6 :: [관리자 승인 완료]\n    // state7 :: 예약없음\n    useEffect(()=>{console.log(scheduleList)},[]);\n    const printSchedule = (v) => {\n        if (v) {\n            switch (v.status) {\n                case ScheduleConf.STATUS.RESERVATION_NOTHING:\n                    return <Schedule status=\"state_box state7\" scheduleId={v.scheduleId}>예약 없음</Schedule>;\n                case ScheduleConf.STATUS.RESERVATION_DONE:\n                    return <Schedule status=\"state_box state2\" scheduleId={v.scheduleId}></Schedule>;\n                case ScheduleConf.STATUS.RESERVATION_IN_PROGRESS:\n                    if (typeof v.value === \"object\") {\n                        return (\n                            <Schedule status=\"state_box state1\" scheduleId={v.scheduleId}>\n                                <p>\n                                    {v.value[0]} / <span>{v.value[1]}</span>\n                                </p>\n                            </Schedule>\n                        );\n                    } else {\n                        return (\n                            <>\n                                <Schedule status=\"blue oneline\"\n                                          scheduleId={v.scheduleId}>{`예약 미승인:${v.value}`}</Schedule>\n                            </>\n                        );\n                    }\n                case ScheduleConf.STATUS.RESULT_IN_PROGRESS:\n                    return (\n                        <Schedule status=\"yellow\" scheduleId={v.scheduleId}>\n                            {`참가학생:${v.value}`}\n                            <br/>\n                            [결과 미승인]\n                        </Schedule>\n                    );\n                case ScheduleConf.STATUS.RESULT_DONE:\n                    return <Schedule status=\"puple oneline\" scheduleId={v.scheduleId}>결과 입력완료</Schedule>;\n                default:\n                    return \"\";\n            }\n        } else {\n            return \"\";\n        }\n    };\n\n    // 필요기능 클릭 시 해당 스케줄 정보\n    return (\n        <div className=\"scroll_area\">\n            <ul className=\"sch_time\">\n                <li>9AM</li>\n                <li>10AM</li>\n                <li>11AM</li>\n                <li>12PM</li>\n                <li>1PM</li>\n                <li>2PM</li>\n                <li>3PM</li>\n                <li>4PM</li>\n                <li>5PM</li>\n                <li>6PM</li>\n            </ul>\n            <table className=\"sch_table\">\n                <colgroup>\n                    <col width=\"5%\"/>\n                    <col width=\"14%\"/>\n                    <col width=\"9%\" span=\"9\"/>\n                </colgroup>\n                <tbody>\n                <tr>\n                    <th scope=\"row\" rowSpan={scheduleList[0].length+1}>\n                        {conf.language.ENGLISH}\n                    </th>\n                </tr>\n                {\n                    scheduleList[0].map((value, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>{value.name}</td>\n                                {value.schedule.map((v, index) => (\n                                    <td key={index}>{printSchedule(v)}</td>\n                                ))}\n                            </tr>\n                        )\n                    })}\n                <tr>\n                    <th scope=\"row\" rowSpan={scheduleList[1].length+1}>\n                        {conf.language.CHINESE}\n                    </th>\n                </tr>\n                {\n                    scheduleList[1].map((value, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>{value.name}</td>\n                                {value.schedule.map((v, index) => (\n                                    <td key={index}>{printSchedule(v)}</td>\n                                ))}\n                            </tr>\n                        )\n                    })\n                }\n                <tr>\n                    <th scope=\"row\" rowSpan={scheduleList[2].length+1}>\n                        {conf.language.JAPANESE}\n                    </th>\n                </tr>\n                {\n                    scheduleList[2].map((value, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>{value.name}</td>\n                                {value.schedule.map((v, index) => (\n                                    <td key={index}>{printSchedule(v)}</td>\n                                ))}\n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ScheduleConf from \"../../conf/scheduleConf\";\n\n/**\n * CheckBox - 스케줄 및 예약관리 체크박스\n * @param handleAll\n * @param handleCheck\n * @param data\n * @returns {JSX.Element}\n */\nexport default ({handleAll, handleCheck, data}) => {\n    const checkBox = (id) => {\n        const ids = [\"allCheck\",\"no_app_reservation\",\"not_result\",\"no_app_result\",\"ok_result\"];\n        ids.forEach(value=>{\n            document.getElementById(value).checked = false;\n        })\n        document.getElementById(id).checked = true;\n    }\n    return <div className=\"check_box_area\">\n        <div className=\"check_box\" onClick={() => {\n            handleAll()\n            checkBox(\"allCheck\")\n        }}>\n            <div className=\"check_box_input all\">\n                <input type=\"checkbox\" id=\"allCheck\" name=\"\"/>\n                <label htmlFor=\"allCheck\"></label>\n            </div>\n        </div>\n        <div className=\"check_box\"\n\n        >\n            <div className=\"check_box_input\">\n                <input type=\"checkbox\" id=\"no_app_reservation\" name=\"\"\n                       onClick={() => {\n                           handleCheck(data, ScheduleConf.STATUS.RESERVATION_IN_PROGRESS);\n                           checkBox(\"no_app_reservation\")\n                       }}\n                />\n                <label htmlFor=\"no_app_reservation\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t예약 미승인 <span className=\"blue\">10</span>건\n\t\t\t\t\t</span>\n                </label>\n            </div>\n        </div>\n        <div className=\"check_box\">\n            <div className=\"check_box_input\">\n                <input type=\"checkbox\" id=\"not_result\" name=\"\"\n                       onClick={() => {\n                           handleCheck(data, ScheduleConf.STATUS.RESERVATION_DONE);\n                           checkBox(\"not_result\")\n                       }}\n                />\n                <label htmlFor=\"not_result\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t결과 미입력 <span className=\"mint\">2</span>건\n\t\t\t\t\t</span>\n                </label>\n            </div>\n        </div>\n        <div className=\"check_box\">\n            <div className=\"check_box_input\">\n                <input type=\"checkbox\" id=\"no_app_result\" name=\"\"\n                       onClick={()=>{\n                           handleCheck(data, ScheduleConf.STATUS.RESULT_IN_PROGRESS);\n                           checkBox(\"no_app_result\")\n                       }}\n                />\n                <label htmlFor=\"no_app_result\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t결과 미승인 <span className=\"yellow\">3</span>건\n\t\t\t\t\t</span>\n                </label>\n            </div>\n        </div>\n        <div className=\"check_box\">\n            <div className=\"check_box_input\">\n                <input type=\"checkbox\" id=\"ok_result\" name=\"\"\n                       onClick={()=>{\n                           handleCheck(data, ScheduleConf.STATUS.RESULT_DONE);\n                           checkBox(\"ok_result\")\n                       }}\n                />\n                <label htmlFor=\"ok_result\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t결과 입력완료 <span className=\"puple\">2</span>건\n\t\t\t\t\t</span>\n                </label>\n            </div>\n        </div>\n    </div>\n}","import ScheduleConf from \"../scheduleConf\";\n\n/**\n * DailySchedule for one foreigner student\n */\nclass DailySchedule extends ScheduleConf {\n    id;\n    name;\n    language;\n    schedule = [];\n\n    /**\n     * @method setSchedule is make a schedule for WeeklyScheduleTable\n     *\n     * @param {int} scheduleId scheduleId\n     * @param {int} argStatus 0~4\n     *\n     * @return {object} {id, status}\n     * */\n    static setSchedule(scheduleId, argStatus) {\n        let status;\n        let value = undefined;\n        switch (argStatus) {\n            case this.STATUS.RESERVATION_NOTHING:\n                status = this.STATUS.RESERVATION_NOTHING;\n                break;\n            case this.STATUS.RESERVATION_IN_PROGRESS:\n                status = this.STATUS.RESERVATION_IN_PROGRESS;\n                break;\n            case this.STATUS.RESERVATION_DONE:\n                status = this.STATUS.RESERVATION_DONE;\n                break;\n            case this.STATUS.RESULT_IN_PROGRESS:\n                status = this.STATUS.RESULT_IN_PROGRESS;\n                break;\n            case this.STATUS.RESULT_DONE:\n                status = this.STATUS.RESULT_DONE;\n                break;\n            default:\n                status = null;\n        }\n        if (arguments[3] === undefined) {\n            value = [Math.ceil(Math.random() * 10)]\n        }\n        return status !== null ?\n            value !== undefined ? {scheduleId, status, value} : {scheduleId, status} :\n            null;\n    }\n\n    /**\n     * @constructor\n     *\n     * @param {int} id Foreigner student id\n     * @param {string} name Foreigner student name\n     * @param {string} language\n     * @param {[string]} scheduleIds\n     */\n    constructor(id, name, language, scheduleIds) {\n        super();\n        let array = [];\n        for (const element of scheduleIds) {\n            array.push(DailySchedule.setSchedule(element, Math.floor(Math.random()*5), [2,3]));\n        }\n        this.name = name;\n        this.language = language;\n        this.schedule = array;\n    }\n}\n\nexport default DailySchedule;","import {useState} from 'react';\n\n/**\n * Hooks - useModal for modal's open state\n * @returns {{isOpen: boolean, handleOpen: (function(): void), handleClose: (function(): void)}}\n */\nconst useModal = ()=>{\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleClose = () => setIsOpen(false);\n    const handleOpen = () => setIsOpen(true);\n\n    return {isOpen,  handleClose, handleOpen};\n}\n\n\nexport default useModal;","import React, {useEffect, useState} from \"react\";\nimport Modal from \"components/common/modal/Modal\";\nimport InsertSchedule from \"components/common/modal/InsertSchedule\";\nimport ScheduleTable from \"components/common/ScheduleTable\";\nimport CheckBox from 'components/common/CheckBox';\nimport DailySchedule from \"../../../../conf/class/DailySchedule\";\nimport conf from \"conf/conf\";\nimport useModal from \"../../../../modules/hooks/useModal\";\n\n/**\n * Manager :: 스케줄 조회\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Schedules() {\n    const data = [\n        [new DailySchedule(1, \"1\", conf.language.ENGLISH, new Array(9)),\n            new DailySchedule(1, \"2\", conf.language.ENGLISH, new Array(9)),\n            new DailySchedule(1, \"3\", conf.language.ENGLISH, new Array(9)),],\n        [new DailySchedule(1, \"4\", conf.language.CHINESE, new Array(9)),\n            new DailySchedule(1, \"5\", conf.language.CHINESE, new Array(9)),\n            new DailySchedule(1, \"6\", conf.language.CHINESE, new Array(9)),],\n        [new DailySchedule(1, \"7\", conf.language.JAPANESE, new Array(9)),\n            new DailySchedule(1, \"8\", conf.language.JAPANESE, new Array(9)),]\n    ];\n    // const [originData, setOriginData] = useState();\n    const [insertIsOpen, setInsertIsOpen] = useState(false);\n    const [scheduleList, setScheduleList] = useState();\n    const {isOpen, handleClose, handleOpen} = useModal();\n\n    const origin = JSON.parse(JSON.stringify(data));\n    useEffect(() => {\n        setScheduleList(data);\n        // setOriginData(origin);\n    }, [])\n\n    const openSch = () => {\n        setInsertIsOpen(true);\n    };\n    const closeSch = () => {\n        setInsertIsOpen(false);\n    };\n    const handleAll = () => {\n        setScheduleList(origin)\n    }\n    const handleCheck = (data, status) => {\n        let array = [];\n        let miniArray = [];\n        for (let i = 0; i < data.length; i++) {\n            miniArray = [];\n            for (let j = 0; j < data[i].length; j++) {\n                for (let k = 0; k < data[i][j].schedule.length; k++) {\n                    try {\n                        if (data[i][j].schedule[k].status !== status) {\n                            data[i][j].schedule[k] = null;\n                        }\n                    } catch {\n                    }\n                }\n                miniArray.push(data[i][j]);\n            }\n            array.push(miniArray)\n        }\n        setScheduleList(array);\n    };\n\n\n\n    return (\n        <div className=\"content\">\n            <div className=\"sub_title\">\n                <p className=\"tit\">{new Date().toDateString().toUpperCase()}</p>\n                <div className=\"select_date\">\n                    <img src=\"/global/img/select_date_ico.gif\" alt=\"날짜 선택\"/>\n                </div>\n                <CheckBox\n                    data={scheduleList}\n                    handleAll={handleAll}\n                    handleCheck={handleCheck}\n                />\n            </div>\n            <div className=\"sch_info\">\n                <ul>\n                    <li className=\"ico01\">[예약현황] 미승인 / 총 신청 학생</li>\n                    <li className=\"ico02\">[예약 승인 완료]</li>\n                </ul>\n                <ul>\n                    <li className=\"ico03\">[결과 미입력] 출석 학생</li>\n                    <li className=\"ico04\">[결과 입력 완료]</li>\n                </ul>\n                <ul>\n                    <li className=\"ico05\">[관리자 미승인] 출석 학생</li>\n                    <li className=\"ico06\">[관리자 승인 완료]</li>\n                </ul>\n            </div>\n            <div className=\"wrap\">\n                {scheduleList ? <ScheduleTable\n                    scheduleList={scheduleList}\n                /> : <></>}\n\n                <div className=\"table_btn\">\n                    <div onClick={handleOpen}>\n                        개별 입력\n                    </div>\n                    <Modal isOpen={isOpen} hadleClose={handleClose}>\n                        <InsertSchedule closeSch={handleClose}/>\n                    </Modal>\n                    <div style={{display:\"none\"}}>\n                        {/* 추후 추가 예정 */}\n                        scv\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\n/**\n * Manager :: 시스템 환경설정\n * @returns {JSX.Element}\n * @constructor\n * @todo 추가바람\n */\nexport default function Settings() {\n\treturn <div>Settings</div>;\n}\n","import React from \"react\";\nimport useClick from \"../../../modules/hooks/useClick\";\n\n/**\n * Moadl - 학생 등록 승인\n * @param handleClose\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ConfirmStudent({ handleClose }) {\n\treturn (\n\t\t<div className=\"popup approval\">\n\t\t\t<div className=\"tit_area\">\n\t\t\t\t<p className=\"tit\">한국인 학생 등록 승인</p>\n\t\t\t\t<p className=\"person\">\n\t\t\t\t\t신청인원 : <span>6</span>명\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"scroll_area\">\n\t\t\t\t<table className=\"pop_table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a1\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a1\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">계열학과</th>\n\t\t\t\t\t\t\t<th scope=\"col\">학번</th>\n\t\t\t\t\t\t\t<th scope=\"col\">이름</th>\n\t\t\t\t\t\t\t<th scope=\"col\">연락처</th>\n\t\t\t\t\t\t\t<th scope=\"col\">G Suite 계정</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a2\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a2\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a3\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a3\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a4\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a4\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a5\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a5\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a6\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a6\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<div className=\"table_check\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"a7\" name=\"\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"a7\"></label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>컴정</td>\n\t\t\t\t\t\t\t<td>1901192</td>\n\t\t\t\t\t\t\t<td>이일영</td>\n\t\t\t\t\t\t\t<td>010-0000-0000</td>\n\t\t\t\t\t\t\t<td>zxc1234@g.yju.ac.kr</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\n\t\t\t<div className=\"btn_area\">\n\t\t\t\t<div href=\"\" className=\"bbtn mint\">\n\t\t\t\t\t등록\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"bbtn white\"\n\t\t\t\t\tref={useClick(() => {\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t닫기\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport useClick from \"../../../modules/hooks/useClick\";\n\n/**\n * Modal - 이용 제한 등록\n * @param handleClose\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ConfirmRestriction({handleClose}) {\n    return (\n        <div className=\"popup restriction\">\n            <p className=\"tit\">이용 제한 등록</p>\n            <p className=\"txt\">\n                {`studentName`} 학생의 <span>{`Reason`}</span>를 입력해주세요.\n            </p>\n            <textarea name=\"\" id=\"\" cols=\"20\" rows=\"4\"/>\n\n            <div className=\"btn_area\">\n                <div className=\"bbtn mint\">\n                    등록\n                </div>\n                <div className=\"bbtn white\" ref={useClick(handleClose)}>\n                    닫기\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport useClick from \"../../../modules/hooks/useClick\";\n\n/**\n * Modal - 이용 제한 헤제\n * @param handleClose\n * @returns {JSX.Element}\n * @constructor\n */\nconst ConfirmUnrestriction = ({handleClose}) => {\n    return <div className=\"popup restriction\">\n        <p className=\"tit\">이용 제한 해제</p>\n        <p className=\"txt\">{`studentName`} 학생의 <span>{`reason`}</span>을 해제하시겠습니까?</p>\n        <textarea name=\"\" id=\"\" cols=\"20\" rows=\"4\" readOnly defaultValue={`사유 : 뭐가 문제야 세이 섬띵`} />\n\n        <div className=\"btn_area\">\n            <div className=\"bbtn mint\">해제</div>\n            <div className=\"bbtn darkGray\" ref={useClick(handleClose)}>닫기</div>\n        </div>\n    </div>;\n}\n\nexport default ConfirmUnrestriction;","import {createSlice} from \"@reduxjs/toolkit\";\n\n\nexport const managerSlice = createSlice({\n    name: \"manager\",\n    initialState: {\n        currentStudent: \"\",\n        data:\"\"\n    },\n    reducers: {\n        setCurrentStudent: (state, action) => {\n            state.currentStudent = action.payload;\n        },\n        setData: (state, action) => {\n            console.log(action)\n            state.data = action.payload;\n        },\n    },\n});\n\nexport const {setCurrentStudent, setData} = managerSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = amount => dispatch => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCurrentStudent = (state) => state.manager.currentStudent;\nexport const selectData = state => state.manager.data;\n\nexport default managerSlice.reducer;\n","import React, {useEffect, useState, useRef} from \"react\";\nimport Modal from \"components/common/modal/Modal\";\nimport ConfirmStudent from \"components/common/modal/ConfirmStudent\";\nimport useClick from \"modules/hooks/useClick\";\nimport ConfirmRestriction from \"../../../../components/common/modal/ConfirmRestriction\";\nimport ConfirmUnrestriction from \"../../../../components/common/modal/ConfirmUnrestriction\";\nimport useModal from \"../../../../modules/hooks/useModal\";\nimport useAxios from \"../../../../modules/hooks/useAxios\";\nimport {selectDept} from \"../../../../redux/confSlice/confSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectData, setData} from \"../../../../redux/managerSlice/managerSlice\";\nimport conf from \"../../../../conf/conf\";\n\n\nclass Student {\n    dept;\n    std_id;\n    name;\n    status;\n    ph;\n    count;\n    absent;\n    e_mail;\n\n    /**\n     * Student Constructor\n     * @param {int} dept std_kor_dept\n     * @param {int} std_id std_kor_id\n     * @param {string} name std_kor_name\n     * @param {boolean} status std_kor_state_of_restriction\n     * @param {string} ph std_kor_phone\n     * @param {string} e_mail std_kor_mail\n     * @param {int} count std_kor_num_of_attendance\n     * @param {int} absent std_kor_num_of_absent\n     * @param {array} deptList state.conf.dept\n     */\n    constructor(dept, std_id, name, status, ph, e_mail, count, absent, deptList) {\n        this.std_id = std_id;\n        this.name = name;\n        this.status = status;\n        this.ph = ph;\n        this.e_mail = e_mail;\n        this.count = count;\n        this.absent = absent;\n        this._dept = deptList[dept - 1];\n    }\n\n    get dept() {\n        return this._dept;\n    }\n}\n\nclass Data {\n    get sort() {\n        return this._sort;\n    }\n\n    set sort(value) {\n        this._sort = value;\n    }\n\n    _sort = null;\n    data = [];\n\n    /**\n     * Data Constructor\n     * @param {[Student]} data\n     */\n    constructor(data, sort = null) {\n        this._sort = sort;\n        this.data = data;\n    }\n\n}\n\n/**\n * Manager :: 학생관리\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Students() {\n\n    // api\n    const {loading, data: resData, error} = useAxios({url: conf.url+\"/api/admin/korean\"});\n    // department information\n    const dept = useSelector(selectDept);\n    const data = useSelector(selectData);\n    const dispatch = useDispatch();\n    // const [dataSet, setDataSet] = useState();\n    // const [data, setData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const {isOpen: isRestrict, handleOpen: hadleOpenForRestrict, handleClose: handleCloseForRestrict} = useModal();\n    const {isOpen: isUnrestrict, handleOpen: handleOpenForUnrestrict, handleClose: handleCloseForUnrestrict} = useModal();\n\n    /**\n     * api response done\n     */\n    useEffect(() => {\n        if (resData) {\n            console.log(resData);\n            let dataArray = [];\n            if(resData.data)resData.data.forEach(v => {\n                dataArray.push(new Student(v.std_kor_dept, v.std_kor_id, v.std_kor_name, v.std_kor_state_of_restriction, v.std_kor_phone, v.std_kor_mail, v.std_kor_num_of_attendance, v.std_kor_num_of_absent, dept))\n            })\n            console.log(dataArray);\n            dispatch(setData(new Data(dataArray)));\n        }\n        // setDataSet(new Data(dataArray));\n    }, [resData, dept])\n\n    const sort = (sortBy) => {\n        if (data.sort === sortBy) {\n            setData(new Data(data.data.sort((a, b) => (a[sortBy] > b[sortBy] ? -1 : 1)), null));\n        } else {\n            setData(new Data(data.data.sort((a, b) => (a[sortBy] < b[sortBy] ? -1 : 1)), sortBy));\n        }};\n    useEffect(() => {\n        window.easydropdown.all();\n    }, []);\n\n\n    return (\n        <div className=\"content\">\n            <div className=\"sub_title\">\n                <div className=\"top_semester\">\n                    <p className=\"tit\">한국인 학생 관리</p>\n                    <select name=\"catgo\" className=\"dropdown\">\n                        <option>2020학년도 1학기</option>\n                        <option>2020학년도 여름학기</option>\n                        <option>2020학년도 2학기</option>\n                        <option>2020학년도 겨울학기</option>\n                    </select>\n                </div>\n\n                <div className=\"top_search\">\n                    <select name=\"catgo\" className=\"dropdown\">\n                        <option>이름</option>\n                        <option>학번</option>\n                        <option>연락처</option>\n                    </select>\n                    <input type=\"text\"/>\n                    <input type=\"submit\" value=\"검색\"/>\n                </div>\n            </div>\n\n            <div className=\"wrap\">\n                <div className=\"scroll_area\">\n                    <table className=\"student_manage_table\">\n                        <colgroup>\n                            <col width=\"10%\"/>\n                            <col width=\"12%\"/>\n                            <col width=\"15%\"/>\n                        </colgroup>\n                        <thead>\n                        <tr>\n                            <th\n                                scope=\"col\"\n                                className=\"bg align\"\n                                ref={useClick(() => {\n                                    setData([]);\n                                    sort(\"dept\");\n                                })}\n                            >\n                                계열학과\n                                <img\n                                    src=\"/global/img/table_align_arrow.gif\"\n                                    alt=\"언어 기준 정렬\"\n                                />\n                            </th>\n                            <th scope=\"col\" className=\"bg\">\n                                학번\n                            </th>\n                            <th scope=\"col\" className=\"bg\">\n                                이름\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"bg align\"\n                                ref={useClick(() => {\n                                    setData([]);\n                                    sort(\"status\");\n                                })}\n                            >\n                                이용제한\n                                <img\n                                    src=\"/global/img/table_align_arrow.gif\"\n                                    alt=\"언어 기준 정렬\"\n                                />\n                            </th>\n                            <th scope=\"col\" className=\"bg\">\n                                연락처\n                            </th>\n                            <th scope=\"col\" className=\"bg\">\n                                G Suite 계정\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"bg align\"\n                                ref={useClick(() => {\n                                    setData([]);\n                                    sort(\"count\");\n                                })}\n                            >\n                                활동 횟수\n                                <img\n                                    src=\"/global/img/table_align_arrow.gif\"\n                                    alt=\"언어 기준 정렬\"\n                                />\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"bg align\"\n                                ref={useClick(() => {\n                                    setData([]);\n                                    sort(\"absent\");\n                                })}\n                            >\n                                미참석 횟수\n                                <img\n                                    src=\"/global/img/table_align_arrow.gif\"\n                                    alt=\"언어 기준 정렬\"\n                                />\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {data && data.data.map((v, index) => (\n                            <tr key={v.std_id} className={v.status ? \"restriction_on\" : \"\"}>\n                                <td>{typeof v.dept === \"object\" ? v.dept.dept_name[0] : \"\"}</td>\n                                <td>{v.std_id}</td>\n                                <td\n                                    className=\"name\"\n                                    onMouseOver={() => {\n                                        document.getElementById(`hover_btn_${index}`).className = \"hover_btn kor\"\n                                    }}\n                                    onMouseOut={() => {\n                                        document.getElementById(`hover_btn_${index}`).className = \"off\"\n                                    }}\n                                >{v.name}\n                                    <div className=\"off\" id={`hover_btn_${index}`}>\n                                        <div className=\"area\">\n                                            <div className=\"navy\">비밀번호 초기화</div>\n                                            {v.status ?\n                                                <>\n                                                    <div className=\"mint\" onClick={\n                                                        handleOpenForUnrestrict\n                                                    }>이용제한 해제\n                                                    </div>\n                                                </>\n                                                :\n                                                <>\n                                                    <div className=\"mint\" onClick={\n                                                        hadleOpenForRestrict\n                                                    }>이용제한\n                                                    </div>\n                                                </>\n                                            }\n                                            <div className=\"lightGray\">삭제</div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    {v.status ? (\n                                        <div className=\"restriction\">\n                                            <img\n                                                src=\"/global/img/restriction_on.png\"\n                                                alt=\"이용제한\"\n                                            />\n                                        </div>\n                                    ) : (\n                                        <div\n                                            className=\"restriction\">\n                                            <img\n                                                src=\"/global/img/restriction_off.png\"\n                                                alt=\"이용제한 해제\"\n                                            />\n                                        </div>\n                                    )}\n                                </td>\n                                <td>{v.ph}</td>\n                                <td>{v.e_mail}</td>\n                                <td>{v.count}회</td>\n                                <td>{v.absent}회</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"table_btn\">\n                    <div\n                        ref={useClick(() => {\n                            setIsOpen(true);\n                        })}\n                    >\n                        신청 승인\n                    </div>\n                    <div\n                        ref={useClick(function () {\n                            alert(\"엑셀 다운\");\n                        })}\n                    >\n                        CSV 다운\n                    </div>\n                </div>\n            </div>\n            <Modal\n                isOpen={isOpen}\n                hadleClose={() => {\n                    setIsOpen(false);\n                }}\n            >\n                <ConfirmStudent\n                    handleClose={() => {\n                        setIsOpen(false);\n                    }}\n                />\n            </Modal>\n            <Modal\n                isOpen={isUnrestrict}\n                onRequestClose={handleCloseForUnrestrict}\n            >\n                <ConfirmUnrestriction handleClose={handleCloseForUnrestrict}/>\n            </Modal>\n            <Modal\n                isOpen={isRestrict}\n                onRequestClose={handleCloseForRestrict}\n            >\n                <ConfirmRestriction handleClose={handleCloseForRestrict}/>\n            </Modal>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Header for Manager\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Header() {\n\treturn (\n\t\t<div className=\"head\">\n\t\t\t<div className=\"head_area\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<img src=\"/global/img/logo.gif\" alt=\"영진전문대학교 로고\" />\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"menu\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/schedules/now\">스케줄 및 예약관리</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/students/now/korean\">학생관리</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/students/now/foreigner\">유학생관리</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/settings\">시스템 환경설정</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\n/**\n * Footer for Web\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Footer() {\n\treturn (\n\t\t<div className=\"footer\">\n\t\t\t<div className=\"footer_area\">\n\t\t\t\t<p className=\"copyright\">\n\t\t\t\t\t대표전화 053-940-511441527 대구광역시 북구 복현로 35 (복현2동 218)\n\t\t\t\t\t영진전문대학교\n\t\t\t\t\t<span>COPYRIGHT© YEUNGJIN UNIVERSITY. All RIGHTS RESERVED.</span>\n\t\t\t\t</p>\n\t\t\t\t<div className=\"family_site\">\n\t\t\t\t\t<select name=\"catgo\" className=\"dropdown\">\n\t\t\t\t\t\t<option value=\"/kr/index.do\">관련사이트</option>\n\t\t\t\t\t\t<option value=\"https://www.yju.ac.kr\">영진전문대학교 국문홈페이지</option>\n\t\t\t\t\t\t<option value=\"https://www.yju.ac.kr/en\">\n\t\t\t\t\t\t\t영진전문대학교 영문홈페이지\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"https://www.yju.ac.kr/cn\">\n\t\t\t\t\t\t\t영진전문대학교 중문홈페이지\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"https://www.yju.ac.kr/jp\">\n\t\t\t\t\t\t\t영진전문대학교 일문홈페이지\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"https://ipsi.yju.ac.kr\">영진전문대학교 입학홈페이지</option>\n\t\t\t\t\t\t<option value=\"http://iacf.yju.ac.kr\">영진전문대학교 산학협력단</option>\n\t\t\t\t\t\t<option value=\"http://job.yju.ac.kr\">\n\t\t\t\t\t\t\t영진전문대학교 종합인력개발센터\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"https://jobcenter.yju.ac.kr\">대학일자리센터</option>\n\t\t\t\t\t\t<option value=\"https://welfare.yju.ac.kr\">장애학생지원센터</option>\n\t\t\t\t\t\t<option value=\"https://counseling.yju.ac.kr/\">학생상담실</option>\n\t\t\t\t\t\t<option value=\"http://iac.yju.ac.kr\">국제교류원</option>\n\t\t\t\t\t\t<option value=\"https://ctl.yju.ac.kr\">교수학습지원센터</option>\n\t\t\t\t\t\t<option value=\"http://www.yjservice.or.kr\">\n\t\t\t\t\t\t\t영진전문대학교 사회봉사단\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"https://dguav.yju.ac.kr\">대구경북무인항공전문교육원</option>\n\t\t\t\t\t\t<option value=\"http://www.ycc.ac.kr\">영진사이버대학교</option>\n\t\t\t\t\t\t<option value=\"https://child.yju.ac.kr\">영진전문대학교 부설 유치원</option>\n\t\t\t\t\t\t<option value=\"http://yel.yju.ac.kr\">YEL</option>\n\t\t\t\t\t\t<option value=\"/kr/index.do\">----- 부설기관 ------</option>\n\t\t\t\t\t\t<option value=\"https://www.dgev.ac.kr\">대구경북영어마을</option>\n\t\t\t\t\t\t<option value=\"https://edu.yju.ac.kr\">평생교육원</option>\n\t\t\t\t\t\t<option value=\"/kr/index.do\">----- 부속기관 -----</option>\n\t\t\t\t\t\t<option value=\"https://itcenter.yju.ac.kr\"> IT 지원센터</option>\n\t\t\t\t\t\t<option value=\"http://lib.yju.ac.kr\">영진전문대학교 도서관</option>\n\t\t\t\t\t\t<option value=\"https://rntc.yju.ac.kr/\">영진전문대학교 학군단</option>\n\t\t\t\t\t\t<option value=\"/kr/index.do\">----- 계열/학과-----</option>\n\t\t\t\t\t\t<option value=\"http://computer.yju.ac.kr\">컴퓨터정보계열</option>\n\t\t\t\t\t\t<option value=\"https://mech.yju.ac.kr\">컴퓨터응용기계계열</option>\n\t\t\t\t\t\t<option value=\"https://infocom.yju.ac.kr\">ICT반도체전자계열</option>\n\t\t\t\t\t\t<option value=\"https://elec.yju.ac.kr\">신재생에너지전기계열</option>\n\t\t\t\t\t\t<option value=\"https://archi.yju.ac.kr\">건축인테리어디자인계열</option>\n\t\t\t\t\t\t<option value=\"https://business.yju.ac.kr\">경영회계서비스계열</option>\n\t\t\t\t\t\t<option value=\"https://tour.yju.ac.kr\">글로벌호텔항공관광계열</option>\n\t\t\t\t\t\t<option value=\"https://nco.yju.ac.kr\">부사관계열</option>\n\t\t\t\t\t\t<option value=\"https://design.yju.ac.kr\">콘텐츠디자인과</option>\n\t\t\t\t\t\t<option value=\"http://drone.yju.ac.kr\">드론항공전자과</option>\n\t\t\t\t\t\t<option value=\"http://bokji.yju.ac.kr\">사회복지과</option>\n\t\t\t\t\t\t<option value=\"https://ece.yju.ac.kr\">유아교육과</option>\n\t\t\t\t\t\t<option value=\"https://nursing.yju.ac.kr\">간호학과</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\n/**\n * Modal - 유학생 연락처\n * @param list\n * @param handleClose\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ForeignerContact({list, handleClose}){\n\n    return <div className=\"popup contact\">\n        <p className=\"tit\">유학생 연락처 정보</p>\n        <div className=\"scroll_area\">\n            <table className=\"pop_table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">이름</th>\n                    <th scope=\"col\">연락처</th>\n                    <th scope=\"col\">이메일</th>\n                    <th scope=\"col\">ZoomID</th>\n                    <th scope=\"col\">ZoomPW</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                <tr>\n                    <td>바라트벡 울잔</td>\n                    <td>010-0000-0000</td>\n                    <td>zxc1234@naver.com</td>\n                    <td>211 233 1546</td>\n                    <td>7209</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div className=\"btn_area right\">\n            <div className=\"bbtn mint\">등록</div>\n            <div className=\"bbtn darkGray\" onClick={handleClose}>닫기</div>\n        </div>\n    </div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {selectDept} from \"../../../redux/confSlice/confSlice\";\nimport {postAdminForeignerAccount} from \"../../../modules/hooks/useAxios\";\nimport {useHistory} from 'react-router-dom'\n\nconst InsertForeignerStudent = ({handleClose}) => {\n\n    const [id, setId] = useState();\n    const [dept, setDept] = useState();\n    const [name, setName] = useState();\n    const [language, setLanguage] = useState();\n    const [country, setCountry] = useState();\n    const [phone, setPhone]= useState();\n    const [mail, setMail] = useState();\n    const [zoomId, setZoomId] = useState();\n\n    const [state, setState] = useState(false);\n    const history = useHistory();\n\n    const departmentList = useSelector(selectDept)\n\n    const handleChange = (e, setValue) => {\n        e.preventDefault();\n        setValue(e.target.value);\n    }\n    /*\n    *   @todo 유효성 검\n    */\n    const handleSave = () => {\n        console.log(departmentList);\n        departmentList.forEach(v=>{\n            if(v.dept_name[0] === dept || v.dept_name[1] === dept){\n                setDept(v.dept_id);\n            }\n        })\n    }\n\n    useEffect(()=>{\n        if(typeof dept === \"number\"){\n            postAdminForeignerAccount(id,dept,name,language,country,phone, mail, zoomId, setState);\n        }\n    }, [dept])\n\n    useEffect(()=>{\n        if(state){\n            history.push('/students/now/foreigner');\n        }\n        return () => {\n            history.push('/students/now/foreigner');\n        }\n    }, [state])\n\n    return (\n        <div className=\"popup regist\">\n            <p className=\"tit\">유학생 등록</p>\n            <ul className=\"regist_input\">\n                <li><input type=\"text\" placeholder=\"언어 입력\" onChange={(e)=>{\n                    handleChange(e, setLanguage)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"국가 입력\" onChange={(e)=>{\n                    handleChange(e, setCountry)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"학번 입력\" onChange={(e)=>{\n                    handleChange(e, setId)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"이름 입력\" onChange={(e)=>{\n                    handleChange(e, setName)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"학과 입력\" onChange={(e)=>{\n                    handleChange(e, setDept)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"연락처 입력\" onChange={(e)=>{\n                    handleChange(e, setPhone)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"이메일 입력\" onChange={(e)=>{\n                    handleChange(e, setMail)\n                }}/></li>\n                <li><input type=\"text\" placeholder=\"ZoomID 입력\" onChange={(e)=>{\n                    handleChange(e, setZoomId)\n                }}/></li>\n            </ul>\n            {/*<div className=\"add_btn\"><span>추가</span></div>*/}\n            <div class=\"scroll_area mt20\">\n                {/*\n                                <table class=\"pop_table\">\n                    <colgroup>\n                        <col width=\"7%\" span=\"3\"/>\n                    </colgroup>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">순번</th>\n                        <th scope=\"col\">언어</th>\n                        <th scope=\"col\">국가</th>\n                        <th scope=\"col\">학번</th>\n                        <th scope=\"col\">이름</th>\n                        <th scope=\"col\">계열학과</th>\n                        <th scope=\"col\">연락처</th>\n                        <th scope=\"col\">이메일</th>\n                        <th scope=\"col\">ZoomID</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>영어</td>\n                        <td>미국</td>\n                        <td>1901192</td>\n                        <td>바라트벡 울잔</td>\n                        <td>컴정</td>\n                        <td>010-0000-0000</td>\n                        <td>zxc1234@naver.com</td>\n                        <td>211 233 1564</td>\n                    </tr>\n                    </tbody>\n                </table>\n                */}\n            </div>\n            <div class=\"btn_area right\">\n                <div class=\"bbtn darkGray\" onClick={()=>{handleSave();\n                handleClose();\n                }}>저장</div>\n            </div>\n        </div>\n    )\n}\n\nexport default InsertForeignerStudent;","import React, {useEffect, useState} from \"react\";\nimport conf from \"conf/conf\";\nimport useClick from \"modules/hooks/useClick\";\nimport useModal from \"../../../../modules/hooks/useModal\";\nimport Modal from \"components/common/modal/Modal\";\nimport ForeignerContact from \"../../../../components/common/modal/ForeignerContact\";\nimport InsertForeignerStudent from \"../../../../components/common/modal/InsertForeignerStudent\";\nimport {getAdminForeignerWork} from \"../../../../modules/hooks/useAxios\";\nimport {useSelector} from \"react-redux\";\nimport {selectDept} from \"../../../../redux/confSlice/confSlice\";\n\nlet i = 1601214;\nlet j = 0;\n\n/**\n * Manager :: 유학생 관리\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Foreigner() {\n    let mockup = {\n        sort: null,\n        data: [\n            {\n                std_for_lang: conf.language.ENGLISH,\n                country: \"미국\",\n                favorite: false,\n                std_id: i++,\n                name: \"Emma Stone\",\n                dept: conf.shortDepartment[1],\n                curruntMonth: 120,\n                lastMonth: 150,\n                thePastMonth: 560,\n                count: j++,\n                delay: 0,\n                check: false,\n            },\n        ],\n    };\n    const [dataSet, setDataSet] = useState();\n    const [data, setData] = useState(mockup.data);\n    const {isOpen: contactIsOpen, handleOpen: handleOpenForContact, handleClose: handleCloseForContact} = useModal();\n    const {isOpen: addIsOpen, handleOpen: handleOpenForAdd, handleClose: handleCloseForAdd} = useModal();\n    const deptList = useSelector(selectDept)\n\n    function handleCheckAll() {\n        let flag = true;\n        return function () {\n            data.forEach(v => {\n                document.getElementById(v.std_id).checked = flag;\n                v.check = flag;\n            })\n            flag = !flag;\n            console.log(data);\n        }\n    }\n\n    useEffect(() => {\n        window.easydropdown.all();\n        getAdminForeignerWork(setDataSet);\n    }, []);\n    useEffect(() => {\n        // console.log(dataSet.data);\n        if (dataSet&& dataSet.hasOwnProperty(\"data\")) {\n\n            setData(dataSet)\n        }\n\n    }, [dataSet])\n\n    useEffect(() => {\n        console.log(data);\n    }, [data])\n\n    const returnDept = (deptId, deptList) => {\n        let returnValue = \"\";\n        deptList.forEach(v=>{\n            if(v.dept_id === deptId){\n                returnValue = v.dept_name[0]\n            }\n        })\n        return returnValue;\n    }\n\n    const sort = (sortBy) => {\n        setData([]); // reset\n        if (mockup.sort === sortBy) {\n            setData(mockup.data.sort((a, b) => (a[sortBy] > b[sortBy] ? -1 : 1)));\n            mockup.sort = null;\n        } else {\n            setData(mockup.data.sort((a, b) => (a[sortBy] < b[sortBy] ? -1 : 1)));\n            mockup.sort = sortBy;\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"content\">\n                <div className=\"sub_title\">\n                    <div className=\"top_semester\">\n                        <p className=\"tit\">유학생 관리</p>\n                        <select name=\"catgo\" className=\"dropdown\">\n                            <option>2020학년도 1학기</option>\n                            <option>2020학년도 여름학기</option>\n                            <option>2020학년도 2학기</option>\n                            <option>2020학년도 겨울학기</option>\n                        </select>\n                    </div>\n\n                    <div className=\"top_search\">\n                        <select name=\"catgo\" className=\"dropdown\">\n                            <option>이름</option>\n                            <option>학번</option>\n                            <option>연락처</option>\n                        </select>\n                        <input type=\"text\"/>\n                        <input type=\"submit\" value=\"검색\"/>\n                    </div>\n                </div>\n\n                <div className=\"wrap\">\n                    <div className=\"scroll_area\">\n                        <table className=\"student_manage_table\">\n                            <colgroup>\n                                <col width=\"5%\"/>\n                                <col width=\"7%\" span=\"3\"/>\n                                <col width=\"7%\"/>\n                                <col width=\"13%\"/>\n                                <col width=\"7%\"/>\n                                <col width=\"7%\" span=\"6\"/>\n                            </colgroup>\n                            <thead>\n                            <tr>\n                                <th rowSpan=\"2\">\n                                    <div className=\"table_check\">\n                                        <input type=\"checkbox\" id=\"a1\" name=\"\" onClick={handleCheckAll()}/>\n                                        <label htmlFor=\"a1\"></label>\n                                    </div>\n                                </th>\n                                <th\n                                    rowSpan=\"2\"\n                                    className=\"align\"\n                                    ref={useClick(() => {\n                                        sort(\"language\");\n                                    })}\n                                >\n                                    언어{\" \"}\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"언어 기준 정렬\"\n                                    />\n                                </th>\n                                <th\n                                    rowSpan=\"2\"\n                                    className=\"align\"\n                                    ref={useClick(() => {\n                                        sort(\"country\");\n                                    })}\n                                >\n                                    국가명{\" \"}\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"국가명 기준 정렬\"\n                                    />\n                                </th>\n                                <th\n                                    rowSpan=\"2\"\n                                    className=\"align\"\n                                    ref={useClick(() => {\n                                        sort(\"favorite\");\n                                    })}\n                                >\n                                    즐겨찾기{\" \"}\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"즐겨찾기 기준 정렬\"\n                                    />\n                                </th>\n                                <th colSpan=\"3\">유학생 정보</th>\n                                <th colSpan=\"4\">활동시간</th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    예약 미승인\n                                    <br/>\n                                    횟수\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"예약 미승인 횟수 기준 정렬\"\n                                    />\n                                </th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    결과 지연\n                                    <br/>\n                                    입력 횟수\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"결과 지연 입력 횟수 기준 정렬\"\n                                    />\n                                </th>\n                            </tr>\n                            <tr>\n                                <th>학번</th>\n                                <th>이름</th>\n                                <th\n                                    rowSpan=\"2\"\n                                    className=\"align\"\n                                    ref={useClick(() => {\n                                        sort(\"dept\");\n                                    })}\n                                >\n                                    계열학과\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"계열학과 기준 정렬\"\n                                    />\n                                </th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    합계\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"합계 기준 정렬\"\n                                    />\n                                </th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    6월\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"6월 기준 정렬\"\n                                    />\n                                </th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    7월\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"7월 기준 정렬\"\n                                    />\n                                </th>\n                                <th rowSpan=\"2\" className=\"align\">\n                                    8월\n                                    <img\n                                        src=\"/global/img/table_align_arrow.gif\"\n                                        alt=\"8월 기준 정렬\"\n                                    />\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {dataSet && dataSet.data.map((value, index) => {\n                                return (\n                                    <tr\n                                        className={\n                                            value.std_for_lang === conf.language.ENGLISH\n                                                ? \"eng\"\n                                                : value.std_for_lang === conf.language.JAPANESE\n                                                ? \"jp\"\n                                                : \"ch\"\n                                        }\n                                        key={value.std_for_id}\n                                    >\n                                        <td>\n                                            <div className=\"table_check\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={value.std_for_id}\n                                                    name=\"\"\n                                                    ref={value.ref}\n                                                    onClick={() => {\n                                                        if (value.check) {\n                                                            value.check = false;\n                                                        } else {\n                                                            value.check = true;\n                                                        }\n                                                    }}\n\n                                                />\n                                                <label htmlFor={value.std_for_id}></label>\n                                            </div>\n                                        </td>\n                                        <td>{value.std_for_lang}</td>\n                                        <td>{value.std_for_country}</td>\n                                        <td>\n                                            {value.favorite ? (\n                                                <div className=\"favor\">\n                                                    <img\n                                                        src=\"/global/img/favor_on.png\"\n                                                        alt=\"즐겨찾기 on\"\n                                                    />\n                                                </div>\n                                            ) : (\n                                                <div className=\"favor\">\n                                                    <img\n                                                        src=\"/global/img/favor_off.png\"\n                                                        alt=\"즐겨찾기 off\"\n                                                    />\n                                                </div>\n                                            )}\n                                        </td>\n                                        <td>{value.std_for_id}</td>\n                                        <td onMouseOver={() => {\n                                            document.getElementById(`hover_btn_${index}`).className = \"hover_btn\";\n                                        }}\n                                            onMouseOut={() => {\n                                                document.getElementById(`hover_btn_${index}`).className = \"off\";\n                                            }}\n                                        >{value.std_for_name}\n                                            <div id={`hover_btn_${index}`} className=\"hover_btn off\">\n                                                <div className=\"area\">\n                                                    <div className=\"navy\">비밀번호 초기화</div>\n                                                    <div className=\"lightGray\">삭제</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>{returnDept(value.std_for_dept, deptList)}</td>\n                                        {/*<td>*/}\n                                        {/*    {(*/}\n                                        {/*        (value.curruntMonth +*/}\n                                        {/*            value.lastMonth +*/}\n                                        {/*            value.thePastMonth) /*/}\n                                        {/*        60*/}\n                                        {/*    ).toFixed(0)}*/}\n                                        {/*    시간{\" \"}*/}\n                                        {/*    {(value.curruntMonth +*/}\n                                        {/*        value.lastMonth +*/}\n                                        {/*        value.thePastMonth) %*/}\n                                        {/*    60}*/}\n                                        {/*    분*/}\n                                        {/*</td>*/}\n                                        {/*<td>*/}\n                                        {/*    {(value.thePastMonth / 60).toFixed(0)}시간{\" \"}*/}\n                                        {/*    {value.thePastMonth % 60}분*/}\n                                        {/*</td>*/}\n                                        {/*<td>*/}\n                                        {/*    {(value.lastMonth / 60).toFixed(0)}시간{\" \"}*/}\n                                        {/*    {value.lastMonth % 60}분*/}\n                                        {/*</td>*/}\n                                        {/*<td>*/}\n                                        {/*    {(value.curruntMonth / 60).toFixed(0)}시간{\" \"}*/}\n                                        {/*    {value.curruntMonth % 60}분*/}\n                                        {/*</td>*/}\n                                        {/*<td>{value.count}회</td>*/}\n                                        {/*<td>{value.delay === 0 ? \"-\" : value.delay}</td>*/}\n                                    </tr>\n                                );\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"table_btn\">\n                        <div onClick={handleOpenForContact}>연락처 정보</div>\n                        <Modal isOpen={contactIsOpen} handleClose={handleCloseForContact}>\n                            <ForeignerContact list={{}} handleClose={handleCloseForContact}/>\n                        </Modal>\n                        <div onClick={handleOpenForAdd}>등록</div>\n                        {/*<div>CSV 다운</div>*/}\n                    </div>\n                    <Modal isOpen={addIsOpen} handleClose={handleCloseForAdd}>\n                        <InsertForeignerStudent handleClose={handleCloseForAdd}/>\n                    </Modal>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    getForeignerReservation,\n    patchForeignerReservationPermission,\n    postForeignerReservationResult\n} from \"../../../modules/hooks/useAxios\";\nimport {useSelector} from \"react-redux\";\nimport {selectUser} from \"../../../redux/userSlice/userSlice\";\n// import FormData from \"form-data\";\n\n\nconst InsertResult = ({sch_id, handleClose}) => {\n    const user = useSelector(selectUser);\n    const [imgStart, setImgStart] = useState();\n    const [imgEnd, setImgEnd] = useState();\n    const [data, setData] = useState(new FormData());\n    const [stdData, setStdData] = useState()\n    const handleInputImage = (e) => {\n        let array = [];\n        data.append('result_start_img', e.target.files[0]);\n        data.append('result_end_img', e.target.files[0]);\n        for (let key of data.entries()) {\n            console.log(key[0] + ',' + key[1]);\n        }\n        setImgStart((e.target.files[0]));\n        setImgEnd(e.target.files[0]);\n    }\n\n    const handleConfirm = () => {\n        let attendance_std_kor_id_list = [];\n        let absent_std_kor_id_list = [];\n        stdData.data.map(v => {\n            console.log(typeof document.getElementById(`${v.std_kor_id}`).value)\n            if (document.getElementById(`${v.std_kor_id}`).value === \"true\") {\n                attendance_std_kor_id_list.push((v.std_kor_id));\n            } else {\n                absent_std_kor_id_list.push((v.std_kor_id));\n            }\n        })\n\n        attendance_std_kor_id_list.map((v, index) => {\n            data.append(`attendance_std_kor_id_list[${index}]`, v);\n        })\n\n\n        absent_std_kor_id_list.map((v, index) => {\n            data.append(`absent_std_kor_id_list[${index}]`, v);\n        })\n\n\n        console.log(data);\n        postForeignerReservationResult(sch_id, data);\n    }\n\n    useEffect(() => {\n        getForeignerReservation(sch_id, user.id, setStdData);\n        window.easydropdown.all();\n    }, [])\n    useEffect(() => {\n        console.log(data)\n        console.log(typeof form);\n        window.easydropdown.all();\n    });\n    return (\n        <div className=\"popup list\">\n            <div className=\"top_tit\">\n                <div className=\"left\">\n                    <p className=\"tit\">출석 결과 입력하기</p>\n                    <p className=\"txt\">7월 13일(월) <span>AM09:00 ~ PM12:00</span></p>\n                </div>\n                <p className=\"name\">바라트벡 울잔</p>\n            </div>\n\n            <div className=\"student_list\">\n                <ul>\n                    {/*<li>*/}\n                    {/*    <div className=\"student\">*/}\n                    {/*        <p className=\"name\">이구슬</p>*/}\n                    {/*        <select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*            <option value=\"attendance\">승인</option>*/}\n                    {/*            <option value=\"absent\">미승인</option>*/}\n                    {/*        </select>*/}\n                    {/*    </div>*/}\n                    {/*</li>*/}\n                    {/*<li>*/}\n                    {/*    <div className=\"student\">*/}\n                    {/*        <p className=\"name\">이구슬</p>*/}\n                    {/*        <select name=\"catgo\" className=\"dropdown\">*/}\n                    {/*            <option value=\"attendance\">승인</option>*/}\n                    {/*            <option value=\"absent\">미승인</option>*/}\n                    {/*        </select>*/}\n                    {/*    </div>*/}\n                    {/*</li>*/}\n                    {stdData && stdData.data ? stdData.data.map((v, index) => {\n                        let attendance = v.res_state_of_attendance;\n                        return <li key={v.std_kor_id + \"index\"}>\n                            <div className=\"student\">\n                                <p className=\"name\">{v.std_kor_name}</p>\n                                <select name={\"catgo\"} className={\"dropdown\"} id={v.std_kor_id} key={`${v.std_kor_id}`}>\n                                    <option value={true} selected={attendance}>출석</option>\n                                    <option value={false} selected={!attendance}>불참</option>\n                                </select>\n                            </div>\n                        </li>\n                    }) : <>Loading</>}\n\n                </ul>\n            </div>\n\n\n            <ul className=\"img_file\">\n                {/*<li>*/}\n                {/*    <p className=\"file_no\">파일 첨부 1</p>*/}\n                {/*    <p className=\"file_name\">0713_zoom_승인 이미지 파일_1.jpg</p>*/}\n                {/*    <div className=\"del\"><img src=\"/global/img/img_list_del.gif\" alt=\"첨부 이미지 파일 삭제\"/></div>*/}\n                {/*</li>*/}\n                {/*<li>*/}\n                {/*    <p className=\"file_no\">파일 첨부 2</p>*/}\n                {/*    <p className=\"file_name\">0713_zoom_승인 이미지 파일_2.jpg</p>*/}\n                {/*    <div className=\"del\"><img src=\"/global/img/img_list_del.gif\" alt=\"첨부 이미지 파일 삭제\"/></div>*/}\n                {/*</li>*/}\n            </ul>\n\n            {/*<p className=\"attend_rate\">출석율 : <span>60%</span></p>*/}\n\n            <div className=\"btn_area right\">\n                <input type=\"file\" name=\"img\" onChange={handleInputImage}/>\n                {/*<div className=\"bbtn gray\">사진 업로드</div>*/}\n                <div className=\"bbtn mint\" onClick={handleConfirm}>저장</div>\n                <div className=\"bbtn darkGray\" onClick={handleClose}>닫기</div>\n            </div>\n        </div>\n    );\n}\n\nexport default InsertResult;","import React, {useState, useEffect, useRef} from \"react\";\nimport Calendar from \"../../../../components/mobile/Calendar\";\nimport moment from \"moment\";\nimport {useSelector} from \"react-redux\";\nimport {selectSelectDate, selectToday} from \"../../../../redux/confSlice/confSlice\";\nimport {getForeignerSchedule} from \"../../../../modules/hooks/useAxios\";\nimport {selectUser} from \"../../../../redux/userSlice/userSlice\";\nimport Modal from \"../../../../components/common/modal/Modal\";\nimport useModal from \"../../../../modules/hooks/useModal\";\nimport ShowList from \"../../../../components/common/modal/ShowList\";\nimport InsertResult from \"../../../../components/common/modal/InsertResult\";\nimport FormData from \"form-data\";\n\nconst STATE_PENDING = \"pending\";\nconst STATE_RESERVED = \"reserved\";\nconst STATE_DONE = \"done\";\nconst STATE_CONFIRM = \"confirm\";\nconst STATE_NOTHING = \"nothing\";\n\nclass ScheduleData {\n    countOfWeek = 0;\n    countOfPending = 0;\n    countOfReserved = 0;\n    countOfDone = 0;\n    countOfConfirm = 0;\n}\n\nclass WeekData extends ScheduleData {\n    monday;\n    tuesday;\n    wednesday;\n    thursday;\n    friday;\n\n    constructor(arrayOfSchedule, today) {\n        super();\n        this.monday = [];\n        this.tuesday = [];\n        this.wednesday = [];\n        this.thursday = [];\n        this.friday = [];\n        arrayOfSchedule.forEach(schedule => {\n            let oneSchedule = new Schedule(schedule, today);\n            this.countOfWeek++;\n            switch ((parseInt(oneSchedule.day))) {\n                case 1:\n                    this.monday.push(oneSchedule);\n                    break;\n                case 2:\n                    this.tuesday.push(oneSchedule);\n                    break;\n                case 3:\n                    this.wednesday.push(oneSchedule);\n                    break;\n                case 4:\n                    this.thursday.push(oneSchedule);\n                    break;\n                case 5:\n                    this.friday.push(oneSchedule);\n                    break;\n            }\n            console.log(oneSchedule.state);\n            switch (oneSchedule.state) {\n                case STATE_PENDING:\n                    this.countOfPending++;\n                    break;\n                case STATE_CONFIRM:\n                    this.countOfConfirm++;\n                    break;\n                case STATE_DONE:\n                    this.countOfDone++;\n                    break;\n                case STATE_RESERVED:\n                    this.countOfReserved++;\n                    break;\n            }\n        })\n    }\n}\n\nclass Schedule {\n    sch_id;\n    day;\n    index;\n    state;\n    reservated_count;\n    un_permission_count;\n\n    constructor(schObj, today) {\n        this.sch_id = schObj.sch_id;\n        this.setIndex(schObj.sch_start_date);\n        this.setState(schObj.sch_end_date, schObj.un_permission_count, schObj.sch_state_of_result_input, schObj.reservated_count, today);\n        this.reservated_count = schObj.reservated_count;\n        this.un_permission_count = schObj.un_permission_count;\n        this.setDate(schObj.sch_start_date);\n    }\n\n    setDate(sch_start_date) {\n        let date = sch_start_date;\n        this.day = moment(sch_start_date).format(\"d\");\n    }\n\n    setIndex(sch_start_date) {\n        let time = sch_start_date.substr(11, 2);\n        let minute = sch_start_date.substr(14, 2);\n        switch (time) {\n            case \"09\":\n                this.index = [0, minute === \"00\" ? 0 : 1];\n                break;\n            case \"10\":\n                this.index = [1, minute === \"00\" ? 0 : 1];\n                break;\n            case \"11\":\n                this.index = [2, minute === \"00\" ? 0 : 1];\n                break;\n            case \"12\":\n                this.index = [3, minute === \"00\" ? 0 : 1];\n                break;\n            case \"13\":\n                this.index = [4, minute === \"00\" ? 0 : 1];\n                break;\n            case \"14\":\n                this.index = [5, minute === \"00\" ? 0 : 1];\n                break;\n            case \"15\":\n                this.index = [6, minute === \"00\" ? 0 : 1];\n                break;\n            case \"16\":\n                this.index = [7, minute === \"00\" ? 0 : 1];\n                break;\n            case \"17\":\n                this.index = [8, minute === \"00\" ? 0 : 1];\n                break;\n            default:\n                this.index = [false, 0];\n        }\n    }\n\n    setState(sch_end_date, un_permission_count, sch_state_of_result_input, reservated_count, today) {\n        if(un_permission_count === 0 && reservated_count === 0){\n            this.state = STATE_NOTHING;\n        }else{\n            if (new Date(sch_end_date) > new Date(today)) {\n                // 스케줄 시작 전\n                if (reservated_count > 0 && un_permission_count === 0) {\n                    this.state = STATE_RESERVED;\n                } else if (reservated_count > 0) {\n                    this.state = STATE_PENDING;\n                }\n            } else {\n                // 스케줄 완료 후\n                if (sch_state_of_result_input) {\n                    this.state = STATE_CONFIRM;\n                } else {\n                    this.state = STATE_DONE;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Foreigner :: 스케줄 관리\n * @returns {JSX.Element}\n * @constructor\n * @todo 구현바람\n */\nexport default function Schedules() {\n    const makeWeek = (weekStartDate) => {\n        let weeks = [];\n        for (let i = 0; i < 7; i++) {\n            weeks.push(moment(weekStartDate).add(i, 'd'));\n        }\n        return weeks;\n    }\n    const today = useSelector(selectToday);\n    const user = useSelector(selectUser);\n    const selectedDate = useSelector(selectSelectDate);\n    const [currentDate, setCurrentDate] = useState(moment(today));\n    const [weekStartDate, setWeekStartDate] = useState();\n    const [weekEndDate, setWeekEndDate] = useState();\n    const [week, setWeek] = useState(makeWeek(weekStartDate));\n    const [data, setData] = useState();\n    const [scheduleData, setScheduleData] = useState();\n    const {isOpen, handleClose, handleOpen} = useModal();\n    const [modal, setModal] = useState(<></>);\n\n    const getWeekStart = (currentDay) => {\n        let startDate = currentDay;\n        let i = 0;\n        while (startDate.format('dddd') !== \"Sunday\") {\n            startDate = startDate.subtract(1, 'd');\n            i++;\n            // setWeekStartDate(startDate);\n        }\n        setWeekStartDate(moment(selectedDate).subtract(i, 'd').format(\"YYYY-MM-DD\"));\n        setWeekEndDate(startDate.add(6, 'd').format(\"YYYY-MM-DD\"));\n    }\n    const buildDiv = (td, state, value, sch_id) => {\n        let div = document.createElement('div');\n        switch (state) {\n            case STATE_PENDING:\n                div.className = \"blue\";\n                div.addEventListener(\"click\", () => {\n                    setModal(<ShowList handleClose={handleClose} sch_id={sch_id}/>);\n                    handleOpen()\n                });\n                div.style.cursor = 'pointer'\n                break;\n            case STATE_RESERVED:\n                div.className = \"mint\";\n                break;\n            case STATE_DONE:\n                div.className = \"yellow\";\n                div.addEventListener(\"click\", () => {\n                    setModal(<InsertResult handleClose={handleClose} sch_id={sch_id}/>);\n                    handleOpen()\n                });\n                div.style.cursor = 'pointer'\n                break;\n            case STATE_CONFIRM:\n                div.className = \"puple\";\n                break;\n            case STATE_NOTHING:\n                div.className = \"state_box state7\";\n                break;\n        }\n        if (typeof value === \"object\") {\n            let p = document.createElement(\"p\");\n            p.innerText = `\n            신청한 학생 : ${value[0]}명\n            예약 미승인 : ${parseInt(value[0]) - parseInt(value[1])}명\n            `;\n            div.appendChild(p);\n        } else {\n            let p = document.createElement(\"p\");\n            switch (state) {\n                case STATE_RESERVED:\n                    p.innerText = `${value}명 예약 완료`;\n                    break;\n                case STATE_DONE:\n                    p.innerText = `\n                    참가 학생 : ${value}명\n                    [결과 미입력]\n                    `;\n                    break;\n                case STATE_CONFIRM:\n                    p.innerText = `결과 입력 완료`;\n                    break;\n                case STATE_NOTHING:\n                    p.innerText = `예약 없음`;\n                    break;\n            }\n            div.appendChild(p);\n        }\n        td.appendChild(div);\n    }\n    const buildTable = (scheduleData) => {\n        const {monday, tuesday, wednesday, thursday, friday} = scheduleData;\n        const tbody = document.getElementById(\"tbody\");\n        tbody.innerText = \"\";\n        for (let i = 0; i < 2; i++) {\n            let tr = document.createElement(\"tr\");\n            for (let j = 0; j < 7; j++) {\n                tr.appendChild(document.createElement(\"td\"));\n            }\n            tbody.appendChild(tr);\n        }\n        for (let i = 0; i < 9; i++) {\n            let tr = document.createElement(\"tr\");\n            for (let j = 0; j < 7; j++) {\n                let td = document.createElement(\"td\");\n                switch (j) {\n                    case 1:\n                        td.id = `monday${i}`;\n                        monday.forEach(v => {\n                            if (v.index[0] === i) {\n                                if (v.index[1] === 1) {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                } else {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                }\n                            }\n                        })\n                        break;\n                    case 2:\n                        td.id = `tuesday${i}`;\n                        tuesday.forEach(v => {\n                            if (v.index[0] === i) {\n                                if (v.index[1] === 1) {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                } else {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                }\n                            }\n                        })\n                        break;\n                    case 3:\n                        td.id = `wednesday${i}`;\n                        wednesday.forEach(v => {\n                            if (v.index[0] === i) {\n                                if (v.index[1] === 1) {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                } else {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                }\n                            }\n                        })\n                        break;\n                    case 4:\n                        td.id = `thursday${i}`;\n                        thursday.forEach(v => {\n                            if (v.index[0] === i) {\n                                if (v.index[1] === 1) {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                } else {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                }\n                            }\n                        })\n                        break;\n                    case 5:\n                        td.id = `friday${i}`;\n                        friday.forEach(v => {\n                            if (v.index[0] === i) {\n                                if (v.index[1] === 1) {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                } else {\n                                    if (v.state === STATE_PENDING) {\n                                        buildDiv(td, v.state, [v.reservated_count.toString(), v.un_permission_count.toString()], v.sch_id);\n                                    } else {\n                                        buildDiv(td, v.state, v.reservated_count.toString(), v.sch_id);\n                                    }\n                                }\n                            }\n                        })\n                        break;\n                }\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n    }\n\n    useEffect(() => {\n        window.easydropdown.all();\n        getWeekStart(moment(today));\n    }, [])\n    useEffect(() => {\n        getWeekStart(moment(selectedDate));\n    }, [selectedDate]);\n    useEffect(() => {\n            setWeek(makeWeek(weekStartDate));\n            console.log(\n                `weekStartDate: ${weekStartDate}`\n            );\n            if (weekStartDate !== undefined) {\n                getForeignerSchedule(user.id, weekEndDate, weekStartDate, setData);\n            }\n            if (scheduleData) {\n                console.log(scheduleData);\n\n            }\n        }\n        ,\n        [weekStartDate]\n    );\n\n    useEffect(() => {\n        if (data) {\n            console.log(data);\n            setScheduleData(new WeekData(data.data, today));\n        }\n    }, [data]);\n    useEffect(() => {\n        if (scheduleData) buildTable(scheduleData);\n    }, [scheduleData])\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"content\">\n                <div className=\"sub_title\">\n                    <p className=\"tit\">스케줄 및 예약관리</p>\n                </div>\n                <div className=\"status_wrap\">\n                    <div className=\"mt50 mr20\">\n                        <Calendar/>\n                    </div>\n                    <div className=\"status_box\">\n                        <div className=\"gray\">\n                            이번주 스케줄\n                            <p>\n                                <span>{scheduleData ? scheduleData.countOfWeek : 0}</span>건\n                            </p>\n                        </div>\n                        <div className=\"blue\">\n                            예약 승인 대기\n                            <p>\n                                <span>{scheduleData ? scheduleData.countOfPending : 0}</span>건\n                            </p>\n                        </div>\n                        <div className=\"mint\">\n                            예약 승인 완료\n                            <p>\n                                <span>{scheduleData ? scheduleData.countOfReserved : 0}</span>건\n                            </p>\n                        </div>\n                        <div className=\"yellow\">\n                            출석 결과 미입력\n                            <p>\n                                <span>{scheduleData ? scheduleData.countOfDone : 0}</span>건\n                            </p>\n                        </div>\n                        <div className=\"puple\">\n                            출석 결과 입력완료\n                            <p>\n                                <span>{scheduleData ? scheduleData.countOfConfirm : 0}</span>건\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"week_wrap\">\n                    <ul className=\"day_week\">\n                        {\n                            week ?\n                                <>\n                                    <li>\n                                        일<span\n                                        className={moment(selectedDate).diff(week[0], 'days') === 0 ? `today` : ``}>{week[0].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        월<span\n                                        className={moment(selectedDate).diff(week[1], 'days') === 0 ? \"today\" : ``}>{week[1].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        화<span\n                                        className={moment(selectedDate).diff(week[2], 'days') === 0 ? `today` : ``}>{week[2].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        수<span\n                                        className={moment(selectedDate).diff(week[3], 'days') === 0 ? `today` : ``}>{week[3].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        목<span\n                                        className={moment(selectedDate).diff(week[4], 'days') === 0 ? `today` : ``}>{week[4].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        금<span\n                                        className={moment(selectedDate).diff(week[5], 'days') === 0 ? `today` : ``}>{week[5].format(\"DD\")}</span>\n                                    </li>\n                                    <li>\n                                        토<span\n                                        className={moment(selectedDate).diff(week[6], 'days') === 0 ? `today` : ``}>{week[6].format(\"DD\")}</span>\n                                    </li>\n                                </> : <>\n                                    <li>\n                                        일<span>12</span>\n                                    </li>\n                                    <li>\n                                        월<span className=\"today\">13</span>\n                                    </li>\n                                    <li>\n                                        화<span>14</span>\n                                    </li>\n                                    <li>\n                                        수<span>15</span>\n                                    </li>\n                                    <li>\n                                        목<span>16</span>\n                                    </li>\n                                    <li>\n                                        금<span>17</span>\n                                    </li>\n                                    <li>\n                                        토<span>18</span>\n                                    </li>\n                                </>\n                        }\n\n                    </ul>\n                    <div className=\"week_table\">\n                        <div className=\"scroll_area\">\n                            <ul>\n                                <li>9AM</li>\n                                <li>10AM</li>\n                                <li>11AM</li>\n                                <li>12PM</li>\n                                <li>1PM</li>\n                                <li>2PM</li>\n                                <li>3PM</li>\n                                <li>4PM</li>\n                                <li>5PM</li>\n                                <li>6PM</li>\n                            </ul>\n                            <table>\n                                <colgroup>\n                                    <col width=\"14.2%\" span=\"7\"/>\n                                </colgroup>\n                                <tbody id=\"tbody\">\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal isOpen={isOpen} handleClose={handleOpen}>\n                {modal}\n            </Modal>\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\n\nimport { Schedules, Students, Settings } from \"routes/Web/Manager\";\n\nimport Header from \"components/common/Header\";\nimport Footer from \"components/common/Footer\";\nimport Foreigner from \"routes/Web/Manager/Students/Foreigner\";\nimport ForeignerSchedules from \"routes/Web/Foreign/Schedules/Schedules\";\n\n/**\n * ManagerRouter - Router for Manager\n * @returns {JSX.Element}\n * @constructor\n */\nexport function ManagerRouter() {\n\tuseEffect(() => {\n\t\twindow.easydropdown.all();\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<Switch>\n\t\t\t\t\t{/* <Redirect exact path=\"/\" to={`/schedules/now`} /> */}\n\n\t\t\t\t\t<Route exact path=\"/\" component={Schedules} />\n\n\t\t\t\t\t<Route exact path=\"/schedules/:term\" component={Schedules} />\n\t\t\t\t\t{/* term => 학기 */}\n\n\t\t\t\t\t<Route exact path=\"/students/:term/korean\" component={Students} />\n\t\t\t\t\t<Route exact path=\"/students/:term/foreigner\" component={Foreigner} />\n\t\t\t\t\t{/* category => foreigner, Korean */}\n\n\t\t\t\t\t<Route path=\"/settings\" component={Settings} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n\n/**\n * ForeignerRouter - Router for Foreigner students\n * @returns {JSX.Element}\n * @constructor\n */\nexport function ForeignerRouter() {\n\treturn (\n\t\t<>\n\t\t\t<Header /> {/* 유학생용 헤더로 대체해야함 */}\n\t\t\t<Switch>\n\t\t\t\t<Redirect exact path=\"/\" to={`/1`} />\n\t\t\t\t<Route exact path=\"/:id\" component={ForeignerSchedules} />\n\t\t\t</Switch>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n","import React,{useRef} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport useClick from \"../../modules/hooks/useClick\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logIn, setClass} from 'redux/userSlice/userSlice';\nimport {blankValidator} from \"../../modules/validator\";\nimport conf from \"../../conf/conf\";\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const login = useSelector(logIn);\n    const history = useHistory();\n    const id = useRef();\n    const pw = useRef();\n\n    const handleLogin = () => {\n        const {value: idValue} = id.current\n        const {value: pwValue} = id.current;\n        if(blankValidator(idValue, pwValue));\n\n    }\n\n    return <div className=\"content\">\n        <div className=\"sub_title\">\n            <p className=\"tit\">글로벌존 서비스 로그인</p>\n        </div>\n        <div className=\"login_wrap\">\n            <p className=\"tit\">Login</p>\n            <ul className=\"tab no2\">\n                <li onClick={()=>{history.push(\"/student\")}}>한국인 학생</li>\n                <li className=\"on\">유학생</li>\n            </ul>\n            <div className=\"login_input\">\n                <input type=\"text\" placeholder=\"학번을 입력해주세요.\" ref={id}/>\n                <input type=\"password\" placeholder=\"비밀번호를 입력해주세요.\" ref={pw}/>\n                <div className=\"submit\" onClick={\n                    handleLogin}>로그인</div>\n            </div>\n        </div>\n    </div>\n}\n\nexport const KoreanLogin = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const googleLogin = () => {}//googleLogin\n    return (<div className=\"content\">\n    <div className=\"sub_title\">\n        <p className=\"tit\">글로벌존 서비스 로그인</p>\n    </div>\n    <div className=\"login_wrap\">\n        <p className=\"tit\">Login</p>\n        <ul className=\"tab no2\">\n            <li className=\"on\">한국인 학생</li>\n            <li>유학생</li>\n        </ul>\n        <div className=\"gsuite_login\" onClick={()=> {\n            if(googleLogin){\n\n            }\n            dispatch(logIn());\n            dispatch(setClass([1,conf.userClass.KOREAN]));\n            history.push(\"/\")\n        }}>\n            <div className=\"btn\">g.yju.ac.kr 계정으로 로그인하기</div>\n            <p>@g.yju.ac.kr 로 끝나는 G-suite 계정만 사용이 가능합니다.</p>\n        </div>\n    </div>\n</div>)\n}\n\nexport default Login;","/**\n * blankValidator\n * @param {any} arguments\n *\n * @return {boolean} returnValue\n */\nexport function blankValidator(){\n    let returnValue = true;\n    for (const argumentsKey in arguments) {\n        if(arguments[argumentsKey] === \"\"){\n            returnValue = false;\n        };\n    }\n    return returnValue;\n}","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Login, {KoreanLogin} from \"../../routes/Login/Login\";\n\n/**\n * LoginRouter - Router for Login\n * @returns {JSX.Element}\n * @constructor\n */\nexport const LoginRouter = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t{/*<Redirect exact path=\"/\" to={`/student`} />*/}\n\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t<Route path=\"/student\" component={KoreanLogin} />\n\t\t\t<Route path=\"/manager\" component={\"\"} />\n\t\t</Switch>\n\t);\n};\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { selectIsLogin, selectUser } from \"redux/userSlice/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport MobileRouter from \"app/Routers/Router.Mobile\";\nimport { ManagerRouter, ForeignerRouter } from \"app/Routers/Router.Web\";\nimport { LoginRouter } from \"app/Routers/Router.Login\";\nimport conf from \"../conf/conf\";\nimport { logOut, setClass } from \"redux/userSlice/userSlice\";\nimport {setTodayFuture, setTodayToday} from \"../redux/confSlice/confSlice\";\n\n/**\n * Routes for Routers\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Routes() {\n\tconst isLogin = useSelector(selectIsLogin);\n\tconst User = useSelector(selectUser);\n\treturn (\n\t\t<Router>\n\t\t\t<Test />\n\t\t\t{isLogin ? (\n\t\t\tUser.userClass === conf.userClass.KOREAN ? (\n\t\t\t\t\t//mobile\n\t\t\t\t\t<>\n\t\t\t\t\t\t<MobileRouter />\n\t\t\t\t\t</>\n\t\t\t\t) : User.userClass === conf.userClass.FOREIGNER ? (\n\t\t\t\t\t// web\n\t\t\t\t\t<ForeignerRouter />\n\t\t\t\t) : (\n\t\t\t\t\t// User === \"Manager\"\n\t\t\t\t\t<ManagerRouter />\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t//notlogin\n\t\t\t\t<LoginRouter />\n\t\t\t)}\n\t\t</Router>\n\t);\n}\n\nconst Test = () => {\n\n\tconst nakamura = 1231234\n\tconst korean = 1321704\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst user = useSelector(selectUser);\n\tconst student = () => {\n\t\tdispatch(setClass([korean,conf.userClass.KOREAN]));\n\t\thistory.push(\"/\");\n\t};\n\tconst foreigner = () => {\n\t\tdispatch(setClass([nakamura,conf.userClass.FOREIGNER]));\n\t\thistory.push(\"/\");\n\t};\n\tconst manager = () => {\n\t\tdispatch(setClass([user.id,conf.userClass.MANAGER]));\n\t\thistory.push(\"/\");\n\t};\n\tconst future = () => {\n\t\tdispatch(setTodayFuture());\n\t}\n\tconst today = () => {\n\t\tdispatch(setTodayToday());\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={student}>학생</button>\n\t\t\t<button onClick={foreigner}>유학생</button>\n\t\t\t<button onClick={manager}>관리자</button>\n\t\t\t<button onClick={future}>미래</button>\n\t\t\t<button onClick={today}>현재</button>\n\t\t</div>\n\t);\n};\n\nexport default Routes;\n","import React, {useEffect} from \"react\";\r\nimport Routes from \"./Routes\";\r\nimport useAxios from \"../modules/hooks/useAxios\";\r\nimport { setDept} from \"../redux/confSlice/confSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport conf from \"../conf/conf\";\r\n\r\n/**\r\n * React App\r\n * @namespace App\r\n * @returns {JSX.Element} App with GlobalStyles, Routes\r\n */\r\nconst App = () => {\r\n    const {loading, error, data} = useAxios({url: conf.url+\"/api/admin/department\"});\r\n    const dispatch = useDispatch();\r\n    async function setDepartment(argLoading){\r\n        let loading = await argLoading;\r\n        if(!loading){\r\n            dispatch(setDept(data));\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        setDepartment(loading);\r\n    },[data])\r\n    return (<>\r\n        <Routes/>\r\n    </>)\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport user from \"./userSlice/userSlice\";\r\nimport conf from './confSlice/confSlice';\r\nimport manager from './managerSlice/managerSlice'\r\n\r\n/**\r\n * ReduxStore\r\n */\r\nexport default configureStore({\r\n\treducer: { user, conf, manager },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./app/App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}